Grammar:

Rule 0     S' -> programa
Rule 1     programa -> clases
Rule 2     clases -> clase ;
Rule 3     clases -> clases clase ;
Rule 4     clase -> CLASS TYPEID { features }
Rule 5     clase -> CLASS TYPEID INHERITS TYPEID { features }
Rule 6     features -> feature ;
Rule 7     features -> features feature ;
Rule 8     feature -> OBJECTID : TYPEID ASSIGN expr  [precedence=right, level=1]
Rule 9     feature -> OBJECTID : TYPEID
Rule 10    feature -> OBJECTID ( ) : TYPEID { expr }
Rule 11    feature -> OBJECTID ( formales ) : TYPEID { expr }
Rule 12    formal -> OBJECTID : TYPEID
Rule 13    formal -> ( formales )
Rule 14    formales -> formal
Rule 15    formales -> formales , formal
Rule 16    expr -> BOOL_CONST
Rule 17    expr -> STR_CONST
Rule 18    expr -> INT_CONST
Rule 19    expr -> OBJECTID
Rule 20    expr -> ( expr )
Rule 21    expr -> NOT expr  [precedence=left, level=2]
Rule 22    expr -> expr = expr
Rule 23    expr -> expr LE expr
Rule 24    expr -> expr < expr
Rule 25    expr -> ~ expr
Rule 26    expr -> expr / expr  [precedence=left, level=4]
Rule 27    expr -> expr * expr  [precedence=left, level=4]
Rule 28    expr -> expr - expr  [precedence=left, level=3]
Rule 29    expr -> expr + expr  [precedence=left, level=3]
Rule 30    expr -> ISVOID expr  [precedence=left, level=5]
Rule 31    expr -> NEW TYPEID
Rule 32    expr -> CASE expr OF ramaCases ESAC
Rule 33    expr -> LET inicializaciones IN expr
Rule 34    expr -> { exprs }
Rule 35    expr -> WHILE expr LOOP expr POOL
Rule 36    expr -> IF expr THEN expr ELSE expr FI
Rule 37    expr -> OBJECTID ( exprs_add )
Rule 38    expr -> OBJECTID ( )
Rule 39    expr -> expr @ TYPEID . OBJECTID ( exprs_add )
Rule 40    expr -> expr @ TYPEID . OBJECTID ( )
Rule 41    expr -> expr . OBJECTID ( exprs_add )
Rule 42    expr -> expr . OBJECTID ( )
Rule 43    expr -> OBJECTID ASSIGN expr  [precedence=right, level=1]
Rule 44    exprs_add -> expr
Rule 45    exprs_add -> exprs_add , expr
Rule 46    exprs -> expr ;
Rule 47    exprs -> exprs expr ;
Rule 48    inicializaciones -> inicializacion
Rule 49    inicializaciones -> inicializacion , inicializaciones
Rule 50    inicializacion -> OBJECTID : TYPEID ASSIGN expr  [precedence=right, level=1]
Rule 51    inicializacion -> OBJECTID : TYPEID
Rule 52    ramaCase -> OBJECTID : TYPEID DARROW expr
Rule 53    ramaCases -> ramaCase ;
Rule 54    ramaCases -> ramaCases ramaCase ;

Unused terminals:

    CMT_CONST1
    ERROR
    NUMBER
    CMT_CONST

Terminals, with rules where they appear:

(                    : 10 11 13 20 37 38 39 40 41 42
)                    : 10 11 13 20 37 38 39 40 41 42
*                    : 27
+                    : 29
,                    : 15 45 49
-                    : 28
.                    : 39 40 41 42
/                    : 26
:                    : 8 9 10 11 12 50 51 52
;                    : 2 3 6 7 46 47 53 54
<                    : 24
=                    : 22
@                    : 39 40
ASSIGN               : 8 43 50
BOOL_CONST           : 16
CASE                 : 32
CLASS                : 4 5
CMT_CONST            : 
CMT_CONST1           : 
DARROW               : 52
ELSE                 : 36
ERROR                : 
ESAC                 : 32
FI                   : 36
IF                   : 36
IN                   : 33
INHERITS             : 5
INT_CONST            : 18
ISVOID               : 30
LE                   : 23
LET                  : 33
LOOP                 : 35
NEW                  : 31
NOT                  : 21
NUMBER               : 
OBJECTID             : 8 9 10 11 12 19 37 38 39 40 41 42 43 50 51 52
OF                   : 32
POOL                 : 35
STR_CONST            : 17
THEN                 : 36
TYPEID               : 4 5 5 8 9 10 11 12 31 39 40 50 51 52
WHILE                : 35
error                : 
{                    : 4 5 10 11 34
}                    : 4 5 10 11 34
~                    : 25

Nonterminals, with rules where they appear:

clase                : 2 3
clases               : 1 3
expr                 : 8 10 11 20 21 22 22 23 23 24 24 25 26 26 27 27 28 28 29 29 30 32 33 35 35 36 36 36 39 40 41 42 43 44 45 46 47 50 52
exprs                : 34 47
exprs_add            : 37 39 41 45
feature              : 6 7
features             : 4 5 7
formal               : 14 15
formales             : 11 13 15
inicializacion       : 48 49
inicializaciones     : 33 49
programa             : 0
ramaCase             : 53 54
ramaCases            : 32 54


state 0

    (0) S' -> . programa
    (1) programa -> . clases
    (2) clases -> . clase ;
    (3) clases -> . clases clase ;
    (4) clase -> . CLASS TYPEID { features }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { features }
    CLASS           shift and go to state 4

    programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> programa .


state 2

    (1) programa -> clases .
    (3) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID { features }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { features }
    $end            reduce using rule 1 (programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (2) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID { features }
    (5) clase -> CLASS . TYPEID INHERITS TYPEID { features }
    TYPEID          shift and go to state 7


state 5

    (3) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (2) clases -> clase ; .
    CLASS           reduce using rule 2 (clases -> clase ; .)
    $end            reduce using rule 2 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . { features }
    (5) clase -> CLASS TYPEID . INHERITS TYPEID { features }
    {               shift and go to state 9
    INHERITS        shift and go to state 10


state 8

    (3) clases -> clases clase ; .
    CLASS           reduce using rule 3 (clases -> clases clase ; .)
    $end            reduce using rule 3 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID { . features }
    (6) features -> . feature ;
    (7) features -> . features feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    OBJECTID        shift and go to state 13

    features                       shift and go to state 11
    feature                        shift and go to state 12

state 10

    (5) clase -> CLASS TYPEID INHERITS . TYPEID { features }
    TYPEID          shift and go to state 14


state 11

    (4) clase -> CLASS TYPEID { features . }
    (7) features -> features . feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 15
    OBJECTID        shift and go to state 13

    feature                        shift and go to state 16

state 12

    (6) features -> feature . ;
    ;               shift and go to state 17


state 13

    (8) feature -> OBJECTID . : TYPEID ASSIGN expr
    (9) feature -> OBJECTID . : TYPEID
    (10) feature -> OBJECTID . ( ) : TYPEID { expr }
    (11) feature -> OBJECTID . ( formales ) : TYPEID { expr }
    :               shift and go to state 18
    (               shift and go to state 19


state 14

    (5) clase -> CLASS TYPEID INHERITS TYPEID . { features }
    {               shift and go to state 20


state 15

    (4) clase -> CLASS TYPEID { features } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID { features } .)


state 16

    (7) features -> features feature . ;
    ;               shift and go to state 21


state 17

    (6) features -> feature ; .
    }               reduce using rule 6 (features -> feature ; .)
    OBJECTID        reduce using rule 6 (features -> feature ; .)


state 18

    (8) feature -> OBJECTID : . TYPEID ASSIGN expr
    (9) feature -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 22


state 19

    (10) feature -> OBJECTID ( . ) : TYPEID { expr }
    (11) feature -> OBJECTID ( . formales ) : TYPEID { expr }
    (14) formales -> . formal
    (15) formales -> . formales , formal
    (12) formal -> . OBJECTID : TYPEID
    (13) formal -> . ( formales )
    )               shift and go to state 25
    OBJECTID        shift and go to state 23
    (               shift and go to state 24

    formales                       shift and go to state 26
    formal                         shift and go to state 27

state 20

    (5) clase -> CLASS TYPEID INHERITS TYPEID { . features }
    (6) features -> . feature ;
    (7) features -> . features feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    OBJECTID        shift and go to state 13

    features                       shift and go to state 28
    feature                        shift and go to state 12

state 21

    (7) features -> features feature ; .
    }               reduce using rule 7 (features -> features feature ; .)
    OBJECTID        reduce using rule 7 (features -> features feature ; .)


state 22

    (8) feature -> OBJECTID : TYPEID . ASSIGN expr
    (9) feature -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 29
    ;               reduce using rule 9 (feature -> OBJECTID : TYPEID .)


state 23

    (12) formal -> OBJECTID . : TYPEID
    :               shift and go to state 30


state 24

    (13) formal -> ( . formales )
    (14) formales -> . formal
    (15) formales -> . formales , formal
    (12) formal -> . OBJECTID : TYPEID
    (13) formal -> . ( formales )
    OBJECTID        shift and go to state 23
    (               shift and go to state 24

    formales                       shift and go to state 31
    formal                         shift and go to state 27

state 25

    (10) feature -> OBJECTID ( ) . : TYPEID { expr }
    :               shift and go to state 32


state 26

    (11) feature -> OBJECTID ( formales . ) : TYPEID { expr }
    (15) formales -> formales . , formal
    )               shift and go to state 33
    ,               shift and go to state 34


state 27

    (14) formales -> formal .
    )               reduce using rule 14 (formales -> formal .)
    ,               reduce using rule 14 (formales -> formal .)


state 28

    (5) clase -> CLASS TYPEID INHERITS TYPEID { features . }
    (7) features -> features . feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 35
    OBJECTID        shift and go to state 13

    feature                        shift and go to state 16

state 29

    (8) feature -> OBJECTID : TYPEID ASSIGN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 37

state 30

    (12) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 51


state 31

    (13) formal -> ( formales . )
    (15) formales -> formales . , formal
    )               shift and go to state 52
    ,               shift and go to state 34


state 32

    (10) feature -> OBJECTID ( ) : . TYPEID { expr }
    TYPEID          shift and go to state 53


state 33

    (11) feature -> OBJECTID ( formales ) . : TYPEID { expr }
    :               shift and go to state 54


state 34

    (15) formales -> formales , . formal
    (12) formal -> . OBJECTID : TYPEID
    (13) formal -> . ( formales )
    OBJECTID        shift and go to state 23
    (               shift and go to state 24

    formal                         shift and go to state 55

state 35

    (5) clase -> CLASS TYPEID INHERITS TYPEID { features } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { features } .)


state 36

    (19) expr -> OBJECTID .
    (37) expr -> OBJECTID . ( exprs_add )
    (38) expr -> OBJECTID . ( )
    (43) expr -> OBJECTID . ASSIGN expr
    =               reduce using rule 19 (expr -> OBJECTID .)
    LE              reduce using rule 19 (expr -> OBJECTID .)
    <               reduce using rule 19 (expr -> OBJECTID .)
    /               reduce using rule 19 (expr -> OBJECTID .)
    *               reduce using rule 19 (expr -> OBJECTID .)
    -               reduce using rule 19 (expr -> OBJECTID .)
    +               reduce using rule 19 (expr -> OBJECTID .)
    @               reduce using rule 19 (expr -> OBJECTID .)
    .               reduce using rule 19 (expr -> OBJECTID .)
    ;               reduce using rule 19 (expr -> OBJECTID .)
    )               reduce using rule 19 (expr -> OBJECTID .)
    OF              reduce using rule 19 (expr -> OBJECTID .)
    LOOP            reduce using rule 19 (expr -> OBJECTID .)
    THEN            reduce using rule 19 (expr -> OBJECTID .)
    ,               reduce using rule 19 (expr -> OBJECTID .)
    }               reduce using rule 19 (expr -> OBJECTID .)
    POOL            reduce using rule 19 (expr -> OBJECTID .)
    ELSE            reduce using rule 19 (expr -> OBJECTID .)
    IN              reduce using rule 19 (expr -> OBJECTID .)
    FI              reduce using rule 19 (expr -> OBJECTID .)
    (               shift and go to state 56
    ASSIGN          shift and go to state 57


state 37

    (8) feature -> OBJECTID : TYPEID ASSIGN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 8 (feature -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 38

    (16) expr -> BOOL_CONST .
    =               reduce using rule 16 (expr -> BOOL_CONST .)
    LE              reduce using rule 16 (expr -> BOOL_CONST .)
    <               reduce using rule 16 (expr -> BOOL_CONST .)
    /               reduce using rule 16 (expr -> BOOL_CONST .)
    *               reduce using rule 16 (expr -> BOOL_CONST .)
    -               reduce using rule 16 (expr -> BOOL_CONST .)
    +               reduce using rule 16 (expr -> BOOL_CONST .)
    @               reduce using rule 16 (expr -> BOOL_CONST .)
    .               reduce using rule 16 (expr -> BOOL_CONST .)
    ;               reduce using rule 16 (expr -> BOOL_CONST .)
    )               reduce using rule 16 (expr -> BOOL_CONST .)
    OF              reduce using rule 16 (expr -> BOOL_CONST .)
    LOOP            reduce using rule 16 (expr -> BOOL_CONST .)
    THEN            reduce using rule 16 (expr -> BOOL_CONST .)
    ,               reduce using rule 16 (expr -> BOOL_CONST .)
    }               reduce using rule 16 (expr -> BOOL_CONST .)
    POOL            reduce using rule 16 (expr -> BOOL_CONST .)
    ELSE            reduce using rule 16 (expr -> BOOL_CONST .)
    IN              reduce using rule 16 (expr -> BOOL_CONST .)
    FI              reduce using rule 16 (expr -> BOOL_CONST .)


state 39

    (17) expr -> STR_CONST .
    =               reduce using rule 17 (expr -> STR_CONST .)
    LE              reduce using rule 17 (expr -> STR_CONST .)
    <               reduce using rule 17 (expr -> STR_CONST .)
    /               reduce using rule 17 (expr -> STR_CONST .)
    *               reduce using rule 17 (expr -> STR_CONST .)
    -               reduce using rule 17 (expr -> STR_CONST .)
    +               reduce using rule 17 (expr -> STR_CONST .)
    @               reduce using rule 17 (expr -> STR_CONST .)
    .               reduce using rule 17 (expr -> STR_CONST .)
    ;               reduce using rule 17 (expr -> STR_CONST .)
    )               reduce using rule 17 (expr -> STR_CONST .)
    OF              reduce using rule 17 (expr -> STR_CONST .)
    LOOP            reduce using rule 17 (expr -> STR_CONST .)
    THEN            reduce using rule 17 (expr -> STR_CONST .)
    ,               reduce using rule 17 (expr -> STR_CONST .)
    }               reduce using rule 17 (expr -> STR_CONST .)
    POOL            reduce using rule 17 (expr -> STR_CONST .)
    ELSE            reduce using rule 17 (expr -> STR_CONST .)
    IN              reduce using rule 17 (expr -> STR_CONST .)
    FI              reduce using rule 17 (expr -> STR_CONST .)


state 40

    (18) expr -> INT_CONST .
    =               reduce using rule 18 (expr -> INT_CONST .)
    LE              reduce using rule 18 (expr -> INT_CONST .)
    <               reduce using rule 18 (expr -> INT_CONST .)
    /               reduce using rule 18 (expr -> INT_CONST .)
    *               reduce using rule 18 (expr -> INT_CONST .)
    -               reduce using rule 18 (expr -> INT_CONST .)
    +               reduce using rule 18 (expr -> INT_CONST .)
    @               reduce using rule 18 (expr -> INT_CONST .)
    .               reduce using rule 18 (expr -> INT_CONST .)
    ;               reduce using rule 18 (expr -> INT_CONST .)
    )               reduce using rule 18 (expr -> INT_CONST .)
    OF              reduce using rule 18 (expr -> INT_CONST .)
    LOOP            reduce using rule 18 (expr -> INT_CONST .)
    THEN            reduce using rule 18 (expr -> INT_CONST .)
    ,               reduce using rule 18 (expr -> INT_CONST .)
    }               reduce using rule 18 (expr -> INT_CONST .)
    POOL            reduce using rule 18 (expr -> INT_CONST .)
    ELSE            reduce using rule 18 (expr -> INT_CONST .)
    IN              reduce using rule 18 (expr -> INT_CONST .)
    FI              reduce using rule 18 (expr -> INT_CONST .)


state 41

    (20) expr -> ( . expr )
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 67

state 42

    (21) expr -> NOT . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 68

state 43

    (25) expr -> ~ . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 69

state 44

    (30) expr -> ISVOID . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 70

state 45

    (31) expr -> NEW . TYPEID
    TYPEID          shift and go to state 71


state 46

    (32) expr -> CASE . expr OF ramaCases ESAC
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 72

state 47

    (33) expr -> LET . inicializaciones IN expr
    (48) inicializaciones -> . inicializacion
    (49) inicializaciones -> . inicializacion , inicializaciones
    (50) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    (51) inicializacion -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 75

    inicializaciones               shift and go to state 73
    inicializacion                 shift and go to state 74

state 48

    (34) expr -> { . exprs }
    (46) exprs -> . expr ;
    (47) exprs -> . exprs expr ;
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    exprs                          shift and go to state 76
    expr                           shift and go to state 77

state 49

    (35) expr -> WHILE . expr LOOP expr POOL
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 78

state 50

    (36) expr -> IF . expr THEN expr ELSE expr FI
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 79

state 51

    (12) formal -> OBJECTID : TYPEID .
    )               reduce using rule 12 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 12 (formal -> OBJECTID : TYPEID .)


state 52

    (13) formal -> ( formales ) .
    )               reduce using rule 13 (formal -> ( formales ) .)
    ,               reduce using rule 13 (formal -> ( formales ) .)


state 53

    (10) feature -> OBJECTID ( ) : TYPEID . { expr }
    {               shift and go to state 80


state 54

    (11) feature -> OBJECTID ( formales ) : . TYPEID { expr }
    TYPEID          shift and go to state 81


state 55

    (15) formales -> formales , formal .
    )               reduce using rule 15 (formales -> formales , formal .)
    ,               reduce using rule 15 (formales -> formales , formal .)


state 56

    (37) expr -> OBJECTID ( . exprs_add )
    (38) expr -> OBJECTID ( . )
    (44) exprs_add -> . expr
    (45) exprs_add -> . exprs_add , expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 83
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    exprs_add                      shift and go to state 82
    expr                           shift and go to state 84

state 57

    (43) expr -> OBJECTID ASSIGN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 85

state 58

    (22) expr -> expr = . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 86

state 59

    (23) expr -> expr LE . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 87

state 60

    (24) expr -> expr < . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 88

state 61

    (26) expr -> expr / . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 89

state 62

    (27) expr -> expr * . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 90

state 63

    (28) expr -> expr - . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 91

state 64

    (29) expr -> expr + . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 92

state 65

    (39) expr -> expr @ . TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 93


state 66

    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    OBJECTID        shift and go to state 94


state 67

    (20) expr -> ( expr . )
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    )               shift and go to state 95
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 68

    (21) expr -> NOT expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    =               reduce using rule 21 (expr -> NOT expr .)
    LE              reduce using rule 21 (expr -> NOT expr .)
    <               reduce using rule 21 (expr -> NOT expr .)
    @               reduce using rule 21 (expr -> NOT expr .)
    .               reduce using rule 21 (expr -> NOT expr .)
    ;               reduce using rule 21 (expr -> NOT expr .)
    )               reduce using rule 21 (expr -> NOT expr .)
    OF              reduce using rule 21 (expr -> NOT expr .)
    LOOP            reduce using rule 21 (expr -> NOT expr .)
    THEN            reduce using rule 21 (expr -> NOT expr .)
    ,               reduce using rule 21 (expr -> NOT expr .)
    }               reduce using rule 21 (expr -> NOT expr .)
    POOL            reduce using rule 21 (expr -> NOT expr .)
    ELSE            reduce using rule 21 (expr -> NOT expr .)
    IN              reduce using rule 21 (expr -> NOT expr .)
    FI              reduce using rule 21 (expr -> NOT expr .)
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64


state 69

    (25) expr -> ~ expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 25 (expr -> ~ expr .)
    )               reduce using rule 25 (expr -> ~ expr .)
    OF              reduce using rule 25 (expr -> ~ expr .)
    LOOP            reduce using rule 25 (expr -> ~ expr .)
    THEN            reduce using rule 25 (expr -> ~ expr .)
    ,               reduce using rule 25 (expr -> ~ expr .)
    }               reduce using rule 25 (expr -> ~ expr .)
    POOL            reduce using rule 25 (expr -> ~ expr .)
    ELSE            reduce using rule 25 (expr -> ~ expr .)
    IN              reduce using rule 25 (expr -> ~ expr .)
    FI              reduce using rule 25 (expr -> ~ expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 70

    (30) expr -> ISVOID expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    =               reduce using rule 30 (expr -> ISVOID expr .)
    LE              reduce using rule 30 (expr -> ISVOID expr .)
    <               reduce using rule 30 (expr -> ISVOID expr .)
    /               reduce using rule 30 (expr -> ISVOID expr .)
    *               reduce using rule 30 (expr -> ISVOID expr .)
    -               reduce using rule 30 (expr -> ISVOID expr .)
    +               reduce using rule 30 (expr -> ISVOID expr .)
    @               reduce using rule 30 (expr -> ISVOID expr .)
    .               reduce using rule 30 (expr -> ISVOID expr .)
    ;               reduce using rule 30 (expr -> ISVOID expr .)
    )               reduce using rule 30 (expr -> ISVOID expr .)
    OF              reduce using rule 30 (expr -> ISVOID expr .)
    LOOP            reduce using rule 30 (expr -> ISVOID expr .)
    THEN            reduce using rule 30 (expr -> ISVOID expr .)
    ,               reduce using rule 30 (expr -> ISVOID expr .)
    }               reduce using rule 30 (expr -> ISVOID expr .)
    POOL            reduce using rule 30 (expr -> ISVOID expr .)
    ELSE            reduce using rule 30 (expr -> ISVOID expr .)
    IN              reduce using rule 30 (expr -> ISVOID expr .)
    FI              reduce using rule 30 (expr -> ISVOID expr .)


state 71

    (31) expr -> NEW TYPEID .
    =               reduce using rule 31 (expr -> NEW TYPEID .)
    LE              reduce using rule 31 (expr -> NEW TYPEID .)
    <               reduce using rule 31 (expr -> NEW TYPEID .)
    /               reduce using rule 31 (expr -> NEW TYPEID .)
    *               reduce using rule 31 (expr -> NEW TYPEID .)
    -               reduce using rule 31 (expr -> NEW TYPEID .)
    +               reduce using rule 31 (expr -> NEW TYPEID .)
    @               reduce using rule 31 (expr -> NEW TYPEID .)
    .               reduce using rule 31 (expr -> NEW TYPEID .)
    ;               reduce using rule 31 (expr -> NEW TYPEID .)
    )               reduce using rule 31 (expr -> NEW TYPEID .)
    OF              reduce using rule 31 (expr -> NEW TYPEID .)
    LOOP            reduce using rule 31 (expr -> NEW TYPEID .)
    THEN            reduce using rule 31 (expr -> NEW TYPEID .)
    ,               reduce using rule 31 (expr -> NEW TYPEID .)
    }               reduce using rule 31 (expr -> NEW TYPEID .)
    POOL            reduce using rule 31 (expr -> NEW TYPEID .)
    ELSE            reduce using rule 31 (expr -> NEW TYPEID .)
    IN              reduce using rule 31 (expr -> NEW TYPEID .)
    FI              reduce using rule 31 (expr -> NEW TYPEID .)


state 72

    (32) expr -> CASE expr . OF ramaCases ESAC
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    OF              shift and go to state 96
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 73

    (33) expr -> LET inicializaciones . IN expr
    IN              shift and go to state 97


state 74

    (48) inicializaciones -> inicializacion .
    (49) inicializaciones -> inicializacion . , inicializaciones
    IN              reduce using rule 48 (inicializaciones -> inicializacion .)
    ,               shift and go to state 98


state 75

    (50) inicializacion -> OBJECTID . : TYPEID ASSIGN expr
    (51) inicializacion -> OBJECTID . : TYPEID
    :               shift and go to state 99


state 76

    (34) expr -> { exprs . }
    (47) exprs -> exprs . expr ;
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    }               shift and go to state 100
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 101

state 77

    (46) exprs -> expr . ;
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 102
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 78

    (35) expr -> WHILE expr . LOOP expr POOL
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    LOOP            shift and go to state 103
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 79

    (36) expr -> IF expr . THEN expr ELSE expr FI
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    THEN            shift and go to state 104
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 80

    (10) feature -> OBJECTID ( ) : TYPEID { . expr }
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 105

state 81

    (11) feature -> OBJECTID ( formales ) : TYPEID . { expr }
    {               shift and go to state 106


state 82

    (37) expr -> OBJECTID ( exprs_add . )
    (45) exprs_add -> exprs_add . , expr
    )               shift and go to state 107
    ,               shift and go to state 108


state 83

    (38) expr -> OBJECTID ( ) .
    =               reduce using rule 38 (expr -> OBJECTID ( ) .)
    LE              reduce using rule 38 (expr -> OBJECTID ( ) .)
    <               reduce using rule 38 (expr -> OBJECTID ( ) .)
    /               reduce using rule 38 (expr -> OBJECTID ( ) .)
    *               reduce using rule 38 (expr -> OBJECTID ( ) .)
    -               reduce using rule 38 (expr -> OBJECTID ( ) .)
    +               reduce using rule 38 (expr -> OBJECTID ( ) .)
    @               reduce using rule 38 (expr -> OBJECTID ( ) .)
    .               reduce using rule 38 (expr -> OBJECTID ( ) .)
    ;               reduce using rule 38 (expr -> OBJECTID ( ) .)
    )               reduce using rule 38 (expr -> OBJECTID ( ) .)
    OF              reduce using rule 38 (expr -> OBJECTID ( ) .)
    LOOP            reduce using rule 38 (expr -> OBJECTID ( ) .)
    THEN            reduce using rule 38 (expr -> OBJECTID ( ) .)
    ,               reduce using rule 38 (expr -> OBJECTID ( ) .)
    }               reduce using rule 38 (expr -> OBJECTID ( ) .)
    POOL            reduce using rule 38 (expr -> OBJECTID ( ) .)
    ELSE            reduce using rule 38 (expr -> OBJECTID ( ) .)
    IN              reduce using rule 38 (expr -> OBJECTID ( ) .)
    FI              reduce using rule 38 (expr -> OBJECTID ( ) .)


state 84

    (44) exprs_add -> expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    )               reduce using rule 44 (exprs_add -> expr .)
    ,               reduce using rule 44 (exprs_add -> expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 85

    (43) expr -> OBJECTID ASSIGN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    =               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    LE              reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    <               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    @               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    .               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    ;               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    )               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    OF              reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    LOOP            reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    THEN            reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    ,               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    }               reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    POOL            reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    ELSE            reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    IN              reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    FI              reduce using rule 43 (expr -> OBJECTID ASSIGN expr .)
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64


state 86

    (22) expr -> expr = expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 22 (expr -> expr = expr .)
    )               reduce using rule 22 (expr -> expr = expr .)
    OF              reduce using rule 22 (expr -> expr = expr .)
    LOOP            reduce using rule 22 (expr -> expr = expr .)
    THEN            reduce using rule 22 (expr -> expr = expr .)
    ,               reduce using rule 22 (expr -> expr = expr .)
    }               reduce using rule 22 (expr -> expr = expr .)
    POOL            reduce using rule 22 (expr -> expr = expr .)
    ELSE            reduce using rule 22 (expr -> expr = expr .)
    IN              reduce using rule 22 (expr -> expr = expr .)
    FI              reduce using rule 22 (expr -> expr = expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 87

    (23) expr -> expr LE expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 23 (expr -> expr LE expr .)
    )               reduce using rule 23 (expr -> expr LE expr .)
    OF              reduce using rule 23 (expr -> expr LE expr .)
    LOOP            reduce using rule 23 (expr -> expr LE expr .)
    THEN            reduce using rule 23 (expr -> expr LE expr .)
    ,               reduce using rule 23 (expr -> expr LE expr .)
    }               reduce using rule 23 (expr -> expr LE expr .)
    POOL            reduce using rule 23 (expr -> expr LE expr .)
    ELSE            reduce using rule 23 (expr -> expr LE expr .)
    IN              reduce using rule 23 (expr -> expr LE expr .)
    FI              reduce using rule 23 (expr -> expr LE expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 88

    (24) expr -> expr < expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 24 (expr -> expr < expr .)
    )               reduce using rule 24 (expr -> expr < expr .)
    OF              reduce using rule 24 (expr -> expr < expr .)
    LOOP            reduce using rule 24 (expr -> expr < expr .)
    THEN            reduce using rule 24 (expr -> expr < expr .)
    ,               reduce using rule 24 (expr -> expr < expr .)
    }               reduce using rule 24 (expr -> expr < expr .)
    POOL            reduce using rule 24 (expr -> expr < expr .)
    ELSE            reduce using rule 24 (expr -> expr < expr .)
    IN              reduce using rule 24 (expr -> expr < expr .)
    FI              reduce using rule 24 (expr -> expr < expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 89

    (26) expr -> expr / expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    =               reduce using rule 26 (expr -> expr / expr .)
    LE              reduce using rule 26 (expr -> expr / expr .)
    <               reduce using rule 26 (expr -> expr / expr .)
    /               reduce using rule 26 (expr -> expr / expr .)
    *               reduce using rule 26 (expr -> expr / expr .)
    -               reduce using rule 26 (expr -> expr / expr .)
    +               reduce using rule 26 (expr -> expr / expr .)
    @               reduce using rule 26 (expr -> expr / expr .)
    .               reduce using rule 26 (expr -> expr / expr .)
    ;               reduce using rule 26 (expr -> expr / expr .)
    )               reduce using rule 26 (expr -> expr / expr .)
    OF              reduce using rule 26 (expr -> expr / expr .)
    LOOP            reduce using rule 26 (expr -> expr / expr .)
    THEN            reduce using rule 26 (expr -> expr / expr .)
    ,               reduce using rule 26 (expr -> expr / expr .)
    }               reduce using rule 26 (expr -> expr / expr .)
    POOL            reduce using rule 26 (expr -> expr / expr .)
    ELSE            reduce using rule 26 (expr -> expr / expr .)
    IN              reduce using rule 26 (expr -> expr / expr .)
    FI              reduce using rule 26 (expr -> expr / expr .)


state 90

    (27) expr -> expr * expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    =               reduce using rule 27 (expr -> expr * expr .)
    LE              reduce using rule 27 (expr -> expr * expr .)
    <               reduce using rule 27 (expr -> expr * expr .)
    /               reduce using rule 27 (expr -> expr * expr .)
    *               reduce using rule 27 (expr -> expr * expr .)
    -               reduce using rule 27 (expr -> expr * expr .)
    +               reduce using rule 27 (expr -> expr * expr .)
    @               reduce using rule 27 (expr -> expr * expr .)
    .               reduce using rule 27 (expr -> expr * expr .)
    ;               reduce using rule 27 (expr -> expr * expr .)
    )               reduce using rule 27 (expr -> expr * expr .)
    OF              reduce using rule 27 (expr -> expr * expr .)
    LOOP            reduce using rule 27 (expr -> expr * expr .)
    THEN            reduce using rule 27 (expr -> expr * expr .)
    ,               reduce using rule 27 (expr -> expr * expr .)
    }               reduce using rule 27 (expr -> expr * expr .)
    POOL            reduce using rule 27 (expr -> expr * expr .)
    ELSE            reduce using rule 27 (expr -> expr * expr .)
    IN              reduce using rule 27 (expr -> expr * expr .)
    FI              reduce using rule 27 (expr -> expr * expr .)


state 91

    (28) expr -> expr - expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    =               reduce using rule 28 (expr -> expr - expr .)
    LE              reduce using rule 28 (expr -> expr - expr .)
    <               reduce using rule 28 (expr -> expr - expr .)
    -               reduce using rule 28 (expr -> expr - expr .)
    +               reduce using rule 28 (expr -> expr - expr .)
    @               reduce using rule 28 (expr -> expr - expr .)
    .               reduce using rule 28 (expr -> expr - expr .)
    ;               reduce using rule 28 (expr -> expr - expr .)
    )               reduce using rule 28 (expr -> expr - expr .)
    OF              reduce using rule 28 (expr -> expr - expr .)
    LOOP            reduce using rule 28 (expr -> expr - expr .)
    THEN            reduce using rule 28 (expr -> expr - expr .)
    ,               reduce using rule 28 (expr -> expr - expr .)
    }               reduce using rule 28 (expr -> expr - expr .)
    POOL            reduce using rule 28 (expr -> expr - expr .)
    ELSE            reduce using rule 28 (expr -> expr - expr .)
    IN              reduce using rule 28 (expr -> expr - expr .)
    FI              reduce using rule 28 (expr -> expr - expr .)
    /               shift and go to state 61
    *               shift and go to state 62


state 92

    (29) expr -> expr + expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    =               reduce using rule 29 (expr -> expr + expr .)
    LE              reduce using rule 29 (expr -> expr + expr .)
    <               reduce using rule 29 (expr -> expr + expr .)
    -               reduce using rule 29 (expr -> expr + expr .)
    +               reduce using rule 29 (expr -> expr + expr .)
    @               reduce using rule 29 (expr -> expr + expr .)
    .               reduce using rule 29 (expr -> expr + expr .)
    ;               reduce using rule 29 (expr -> expr + expr .)
    )               reduce using rule 29 (expr -> expr + expr .)
    OF              reduce using rule 29 (expr -> expr + expr .)
    LOOP            reduce using rule 29 (expr -> expr + expr .)
    THEN            reduce using rule 29 (expr -> expr + expr .)
    ,               reduce using rule 29 (expr -> expr + expr .)
    }               reduce using rule 29 (expr -> expr + expr .)
    POOL            reduce using rule 29 (expr -> expr + expr .)
    ELSE            reduce using rule 29 (expr -> expr + expr .)
    IN              reduce using rule 29 (expr -> expr + expr .)
    FI              reduce using rule 29 (expr -> expr + expr .)
    /               shift and go to state 61
    *               shift and go to state 62


state 93

    (39) expr -> expr @ TYPEID . . OBJECTID ( exprs_add )
    (40) expr -> expr @ TYPEID . . OBJECTID ( )
    .               shift and go to state 109


state 94

    (41) expr -> expr . OBJECTID . ( exprs_add )
    (42) expr -> expr . OBJECTID . ( )
    (               shift and go to state 110


state 95

    (20) expr -> ( expr ) .
    =               reduce using rule 20 (expr -> ( expr ) .)
    LE              reduce using rule 20 (expr -> ( expr ) .)
    <               reduce using rule 20 (expr -> ( expr ) .)
    /               reduce using rule 20 (expr -> ( expr ) .)
    *               reduce using rule 20 (expr -> ( expr ) .)
    -               reduce using rule 20 (expr -> ( expr ) .)
    +               reduce using rule 20 (expr -> ( expr ) .)
    @               reduce using rule 20 (expr -> ( expr ) .)
    .               reduce using rule 20 (expr -> ( expr ) .)
    ;               reduce using rule 20 (expr -> ( expr ) .)
    )               reduce using rule 20 (expr -> ( expr ) .)
    OF              reduce using rule 20 (expr -> ( expr ) .)
    LOOP            reduce using rule 20 (expr -> ( expr ) .)
    THEN            reduce using rule 20 (expr -> ( expr ) .)
    ,               reduce using rule 20 (expr -> ( expr ) .)
    }               reduce using rule 20 (expr -> ( expr ) .)
    POOL            reduce using rule 20 (expr -> ( expr ) .)
    ELSE            reduce using rule 20 (expr -> ( expr ) .)
    IN              reduce using rule 20 (expr -> ( expr ) .)
    FI              reduce using rule 20 (expr -> ( expr ) .)


state 96

    (32) expr -> CASE expr OF . ramaCases ESAC
    (53) ramaCases -> . ramaCase ;
    (54) ramaCases -> . ramaCases ramaCase ;
    (52) ramaCase -> . OBJECTID : TYPEID DARROW expr
    OBJECTID        shift and go to state 113

    ramaCases                      shift and go to state 111
    ramaCase                       shift and go to state 112

state 97

    (33) expr -> LET inicializaciones IN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 114

state 98

    (49) inicializaciones -> inicializacion , . inicializaciones
    (48) inicializaciones -> . inicializacion
    (49) inicializaciones -> . inicializacion , inicializaciones
    (50) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    (51) inicializacion -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 75

    inicializacion                 shift and go to state 74
    inicializaciones               shift and go to state 115

state 99

    (50) inicializacion -> OBJECTID : . TYPEID ASSIGN expr
    (51) inicializacion -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 116


state 100

    (34) expr -> { exprs } .
    =               reduce using rule 34 (expr -> { exprs } .)
    LE              reduce using rule 34 (expr -> { exprs } .)
    <               reduce using rule 34 (expr -> { exprs } .)
    /               reduce using rule 34 (expr -> { exprs } .)
    *               reduce using rule 34 (expr -> { exprs } .)
    -               reduce using rule 34 (expr -> { exprs } .)
    +               reduce using rule 34 (expr -> { exprs } .)
    @               reduce using rule 34 (expr -> { exprs } .)
    .               reduce using rule 34 (expr -> { exprs } .)
    ;               reduce using rule 34 (expr -> { exprs } .)
    )               reduce using rule 34 (expr -> { exprs } .)
    OF              reduce using rule 34 (expr -> { exprs } .)
    LOOP            reduce using rule 34 (expr -> { exprs } .)
    THEN            reduce using rule 34 (expr -> { exprs } .)
    ,               reduce using rule 34 (expr -> { exprs } .)
    }               reduce using rule 34 (expr -> { exprs } .)
    POOL            reduce using rule 34 (expr -> { exprs } .)
    ELSE            reduce using rule 34 (expr -> { exprs } .)
    IN              reduce using rule 34 (expr -> { exprs } .)
    FI              reduce using rule 34 (expr -> { exprs } .)


state 101

    (47) exprs -> exprs expr . ;
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 117
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 102

    (46) exprs -> expr ; .
    }               reduce using rule 46 (exprs -> expr ; .)
    BOOL_CONST      reduce using rule 46 (exprs -> expr ; .)
    STR_CONST       reduce using rule 46 (exprs -> expr ; .)
    INT_CONST       reduce using rule 46 (exprs -> expr ; .)
    OBJECTID        reduce using rule 46 (exprs -> expr ; .)
    (               reduce using rule 46 (exprs -> expr ; .)
    NOT             reduce using rule 46 (exprs -> expr ; .)
    ~               reduce using rule 46 (exprs -> expr ; .)
    ISVOID          reduce using rule 46 (exprs -> expr ; .)
    NEW             reduce using rule 46 (exprs -> expr ; .)
    CASE            reduce using rule 46 (exprs -> expr ; .)
    LET             reduce using rule 46 (exprs -> expr ; .)
    {               reduce using rule 46 (exprs -> expr ; .)
    WHILE           reduce using rule 46 (exprs -> expr ; .)
    IF              reduce using rule 46 (exprs -> expr ; .)


state 103

    (35) expr -> WHILE expr LOOP . expr POOL
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 118

state 104

    (36) expr -> IF expr THEN . expr ELSE expr FI
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 119

state 105

    (10) feature -> OBJECTID ( ) : TYPEID { expr . }
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    }               shift and go to state 120
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 106

    (11) feature -> OBJECTID ( formales ) : TYPEID { . expr }
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 121

state 107

    (37) expr -> OBJECTID ( exprs_add ) .
    =               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    LE              reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    <               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    /               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    *               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    -               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    +               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    @               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    .               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    ;               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    )               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    OF              reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    ,               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    }               reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    IN              reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)
    FI              reduce using rule 37 (expr -> OBJECTID ( exprs_add ) .)


state 108

    (45) exprs_add -> exprs_add , . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 122

state 109

    (39) expr -> expr @ TYPEID . . OBJECTID ( exprs_add )
    (40) expr -> expr @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 123


state 110

    (41) expr -> expr . OBJECTID ( . exprs_add )
    (42) expr -> expr . OBJECTID ( . )
    (44) exprs_add -> . expr
    (45) exprs_add -> . exprs_add , expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 125
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 84
    exprs_add                      shift and go to state 124

state 111

    (32) expr -> CASE expr OF ramaCases . ESAC
    (54) ramaCases -> ramaCases . ramaCase ;
    (52) ramaCase -> . OBJECTID : TYPEID DARROW expr
    ESAC            shift and go to state 126
    OBJECTID        shift and go to state 113

    ramaCase                       shift and go to state 127

state 112

    (53) ramaCases -> ramaCase . ;
    ;               shift and go to state 128


state 113

    (52) ramaCase -> OBJECTID . : TYPEID DARROW expr
    :               shift and go to state 129


state 114

    (33) expr -> LET inicializaciones IN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    )               reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    OF              reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    LOOP            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    THEN            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    ,               reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    }               reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    POOL            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    ELSE            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    IN              reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    FI              reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 115

    (49) inicializaciones -> inicializacion , inicializaciones .
    IN              reduce using rule 49 (inicializaciones -> inicializacion , inicializaciones .)


state 116

    (50) inicializacion -> OBJECTID : TYPEID . ASSIGN expr
    (51) inicializacion -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 130
    ,               reduce using rule 51 (inicializacion -> OBJECTID : TYPEID .)
    IN              reduce using rule 51 (inicializacion -> OBJECTID : TYPEID .)


state 117

    (47) exprs -> exprs expr ; .
    }               reduce using rule 47 (exprs -> exprs expr ; .)
    BOOL_CONST      reduce using rule 47 (exprs -> exprs expr ; .)
    STR_CONST       reduce using rule 47 (exprs -> exprs expr ; .)
    INT_CONST       reduce using rule 47 (exprs -> exprs expr ; .)
    OBJECTID        reduce using rule 47 (exprs -> exprs expr ; .)
    (               reduce using rule 47 (exprs -> exprs expr ; .)
    NOT             reduce using rule 47 (exprs -> exprs expr ; .)
    ~               reduce using rule 47 (exprs -> exprs expr ; .)
    ISVOID          reduce using rule 47 (exprs -> exprs expr ; .)
    NEW             reduce using rule 47 (exprs -> exprs expr ; .)
    CASE            reduce using rule 47 (exprs -> exprs expr ; .)
    LET             reduce using rule 47 (exprs -> exprs expr ; .)
    {               reduce using rule 47 (exprs -> exprs expr ; .)
    WHILE           reduce using rule 47 (exprs -> exprs expr ; .)
    IF              reduce using rule 47 (exprs -> exprs expr ; .)


state 118

    (35) expr -> WHILE expr LOOP expr . POOL
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    POOL            shift and go to state 131
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 119

    (36) expr -> IF expr THEN expr . ELSE expr FI
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    ELSE            shift and go to state 132
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 120

    (10) feature -> OBJECTID ( ) : TYPEID { expr } .
    ;               reduce using rule 10 (feature -> OBJECTID ( ) : TYPEID { expr } .)


state 121

    (11) feature -> OBJECTID ( formales ) : TYPEID { expr . }
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    }               shift and go to state 133
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 122

    (45) exprs_add -> exprs_add , expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    )               reduce using rule 45 (exprs_add -> exprs_add , expr .)
    ,               reduce using rule 45 (exprs_add -> exprs_add , expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 123

    (39) expr -> expr @ TYPEID . OBJECTID . ( exprs_add )
    (40) expr -> expr @ TYPEID . OBJECTID . ( )
    (               shift and go to state 134


state 124

    (41) expr -> expr . OBJECTID ( exprs_add . )
    (45) exprs_add -> exprs_add . , expr
    )               shift and go to state 135
    ,               shift and go to state 108


state 125

    (42) expr -> expr . OBJECTID ( ) .
    =               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    LE              reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    <               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    /               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    *               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    -               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    +               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    @               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    .               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    ;               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    )               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    OF              reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    LOOP            reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    THEN            reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    ,               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    }               reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    POOL            reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    ELSE            reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    IN              reduce using rule 42 (expr -> expr . OBJECTID ( ) .)
    FI              reduce using rule 42 (expr -> expr . OBJECTID ( ) .)


state 126

    (32) expr -> CASE expr OF ramaCases ESAC .
    =               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    LE              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    <               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    /               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    *               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    -               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    +               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    @               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    .               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    ;               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    )               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    OF              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    LOOP            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    THEN            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    ,               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    }               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    POOL            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    ELSE            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    IN              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    FI              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)


state 127

    (54) ramaCases -> ramaCases ramaCase . ;
    ;               shift and go to state 136


state 128

    (53) ramaCases -> ramaCase ; .
    ESAC            reduce using rule 53 (ramaCases -> ramaCase ; .)
    OBJECTID        reduce using rule 53 (ramaCases -> ramaCase ; .)


state 129

    (52) ramaCase -> OBJECTID : . TYPEID DARROW expr
    TYPEID          shift and go to state 137


state 130

    (50) inicializacion -> OBJECTID : TYPEID ASSIGN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 138

state 131

    (35) expr -> WHILE expr LOOP expr POOL .
    =               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    LE              reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    <               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    /               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    *               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    -               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    +               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    @               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    .               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    ;               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    )               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    OF              reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    LOOP            reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    THEN            reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    ,               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    }               reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    POOL            reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    ELSE            reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    IN              reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)
    FI              reduce using rule 35 (expr -> WHILE expr LOOP expr POOL .)


state 132

    (36) expr -> IF expr THEN expr ELSE . expr FI
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 139

state 133

    (11) feature -> OBJECTID ( formales ) : TYPEID { expr } .
    ;               reduce using rule 11 (feature -> OBJECTID ( formales ) : TYPEID { expr } .)


state 134

    (39) expr -> expr @ TYPEID . OBJECTID ( . exprs_add )
    (40) expr -> expr @ TYPEID . OBJECTID ( . )
    (44) exprs_add -> . expr
    (45) exprs_add -> . exprs_add , expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 141
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 84
    exprs_add                      shift and go to state 140

state 135

    (41) expr -> expr . OBJECTID ( exprs_add ) .
    =               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    LE              reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    <               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    /               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    *               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    -               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    +               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    @               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    .               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    ;               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    )               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    OF              reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    ,               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    }               reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    IN              reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)
    FI              reduce using rule 41 (expr -> expr . OBJECTID ( exprs_add ) .)


state 136

    (54) ramaCases -> ramaCases ramaCase ; .
    ESAC            reduce using rule 54 (ramaCases -> ramaCases ramaCase ; .)
    OBJECTID        reduce using rule 54 (ramaCases -> ramaCases ramaCase ; .)


state 137

    (52) ramaCase -> OBJECTID : TYPEID . DARROW expr
    DARROW          shift and go to state 142


state 138

    (50) inicializacion -> OBJECTID : TYPEID ASSIGN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    ,               reduce using rule 50 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    IN              reduce using rule 50 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 139

    (36) expr -> IF expr THEN expr ELSE expr . FI
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    FI              shift and go to state 143
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


state 140

    (39) expr -> expr @ TYPEID . OBJECTID ( exprs_add . )
    (45) exprs_add -> exprs_add . , expr
    )               shift and go to state 144
    ,               shift and go to state 108


state 141

    (40) expr -> expr @ TYPEID . OBJECTID ( ) .
    =               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 40 (expr -> expr @ TYPEID . OBJECTID ( ) .)


state 142

    (52) ramaCase -> OBJECTID : TYPEID DARROW . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . { exprs }
    (35) expr -> . WHILE expr LOOP expr POOL
    (36) expr -> . IF expr THEN expr ELSE expr FI
    (37) expr -> . OBJECTID ( exprs_add )
    (38) expr -> . OBJECTID ( )
    (39) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> . expr @ TYPEID . OBJECTID ( )
    (41) expr -> . expr . OBJECTID ( exprs_add )
    (42) expr -> . expr . OBJECTID ( )
    (43) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    {               shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    expr                           shift and go to state 145

state 143

    (36) expr -> IF expr THEN expr ELSE expr FI .
    =               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    LE              reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    <               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    /               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    *               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    -               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    +               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    @               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    .               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    ;               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    )               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    OF              reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    LOOP            reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    THEN            reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    ,               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    }               reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    POOL            reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    ELSE            reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    IN              reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)
    FI              reduce using rule 36 (expr -> IF expr THEN expr ELSE expr FI .)


state 144

    (39) expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .
    =               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    LE              reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    <               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    /               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    *               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    -               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    +               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    @               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    .               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ;               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    )               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    OF              reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ,               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    }               reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    IN              reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    FI              reduce using rule 39 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)


state 145

    (52) ramaCase -> OBJECTID : TYPEID DARROW expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (39) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (40) expr -> expr . @ TYPEID . OBJECTID ( )
    (41) expr -> expr . . OBJECTID ( exprs_add )
    (42) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 52 (ramaCase -> OBJECTID : TYPEID DARROW expr .)
    =               shift and go to state 58
    LE              shift and go to state 59
    <               shift and go to state 60
    /               shift and go to state 61
    *               shift and go to state 62
    -               shift and go to state 63
    +               shift and go to state 64
    @               shift and go to state 65
    .               shift and go to state 66


Conflicts:

shift/reduce conflict for = in state 69 resolved as shift
shift/reduce conflict for LE in state 69 resolved as shift
shift/reduce conflict for < in state 69 resolved as shift
shift/reduce conflict for / in state 69 resolved as shift
shift/reduce conflict for * in state 69 resolved as shift
shift/reduce conflict for - in state 69 resolved as shift
shift/reduce conflict for + in state 69 resolved as shift
shift/reduce conflict for @ in state 69 resolved as shift
shift/reduce conflict for . in state 69 resolved as shift
shift/reduce conflict for = in state 86 resolved as shift
shift/reduce conflict for LE in state 86 resolved as shift
shift/reduce conflict for < in state 86 resolved as shift
shift/reduce conflict for / in state 86 resolved as shift
shift/reduce conflict for * in state 86 resolved as shift
shift/reduce conflict for - in state 86 resolved as shift
shift/reduce conflict for + in state 86 resolved as shift
shift/reduce conflict for @ in state 86 resolved as shift
shift/reduce conflict for . in state 86 resolved as shift
shift/reduce conflict for = in state 87 resolved as shift
shift/reduce conflict for LE in state 87 resolved as shift
shift/reduce conflict for < in state 87 resolved as shift
shift/reduce conflict for / in state 87 resolved as shift
shift/reduce conflict for * in state 87 resolved as shift
shift/reduce conflict for - in state 87 resolved as shift
shift/reduce conflict for + in state 87 resolved as shift
shift/reduce conflict for @ in state 87 resolved as shift
shift/reduce conflict for . in state 87 resolved as shift
shift/reduce conflict for = in state 88 resolved as shift
shift/reduce conflict for LE in state 88 resolved as shift
shift/reduce conflict for < in state 88 resolved as shift
shift/reduce conflict for / in state 88 resolved as shift
shift/reduce conflict for * in state 88 resolved as shift
shift/reduce conflict for - in state 88 resolved as shift
shift/reduce conflict for + in state 88 resolved as shift
shift/reduce conflict for @ in state 88 resolved as shift
shift/reduce conflict for . in state 88 resolved as shift
shift/reduce conflict for = in state 114 resolved as shift
shift/reduce conflict for LE in state 114 resolved as shift
shift/reduce conflict for < in state 114 resolved as shift
shift/reduce conflict for / in state 114 resolved as shift
shift/reduce conflict for * in state 114 resolved as shift
shift/reduce conflict for - in state 114 resolved as shift
shift/reduce conflict for + in state 114 resolved as shift
shift/reduce conflict for @ in state 114 resolved as shift
shift/reduce conflict for . in state 114 resolved as shift