Grammar:

Rule 0     S' -> programa
Rule 1     programa -> clases
Rule 2     clases -> clase ;
Rule 3     clases -> clases clase ;
Rule 4     clase -> CLASS TYPEID { features }
Rule 5     clase -> CLASS TYPEID { }
Rule 6     clase -> CLASS TYPEID INHERITS TYPEID { features }
Rule 7     clase -> CLASS TYPEID INHERITS TYPEID { }
Rule 8     features -> feature ;
Rule 9     features -> features feature ;
Rule 10    feature -> OBJECTID : TYPEID ASSIGN expr  [precedence=right, level=1]
Rule 11    feature -> OBJECTID : TYPEID
Rule 12    feature -> OBJECTID ( ) : TYPEID { expr }
Rule 13    feature -> OBJECTID ( formales ) : TYPEID { expr }
Rule 14    formal -> OBJECTID : TYPEID
Rule 15    formal -> ( formales )
Rule 16    formales -> formal
Rule 17    formales -> formales , formal
Rule 18    expr -> BOOL_CONST
Rule 19    expr -> STR_CONST
Rule 20    expr -> INT_CONST
Rule 21    expr -> OBJECTID
Rule 22    expr -> ( expr )
Rule 23    expr -> NOT expr  [precedence=left, level=2]
Rule 24    expr -> expr = expr
Rule 25    expr -> expr LE expr
Rule 26    expr -> expr < expr
Rule 27    expr -> ~ expr
Rule 28    expr -> expr / expr  [precedence=left, level=4]
Rule 29    expr -> expr * expr  [precedence=left, level=4]
Rule 30    expr -> expr - expr  [precedence=left, level=3]
Rule 31    expr -> expr + expr  [precedence=left, level=3]
Rule 32    expr -> ISVOID expr  [precedence=left, level=5]
Rule 33    expr -> NEW TYPEID
Rule 34    expr -> CASE expr OF ramaCases ESAC
Rule 35    expr -> LET inicializaciones IN expr
Rule 36    expr -> { exprs }
Rule 37    expr -> WHILE expr LOOP expr POOL
Rule 38    expr -> IF expr THEN expr ELSE expr FI
Rule 39    expr -> OBJECTID ( exprs_add )
Rule 40    expr -> OBJECTID ( )
Rule 41    expr -> expr @ TYPEID . OBJECTID ( exprs_add )
Rule 42    expr -> expr @ TYPEID . OBJECTID ( )
Rule 43    expr -> expr . OBJECTID ( exprs_add )
Rule 44    expr -> expr . OBJECTID ( )
Rule 45    expr -> OBJECTID ASSIGN expr  [precedence=right, level=1]
Rule 46    exprs_add -> expr
Rule 47    exprs_add -> exprs_add , expr
Rule 48    exprs -> expr ;
Rule 49    exprs -> exprs expr ;
Rule 50    inicializaciones -> inicializacion
Rule 51    inicializaciones -> inicializacion , inicializaciones
Rule 52    inicializacion -> OBJECTID : TYPEID ASSIGN expr  [precedence=right, level=1]
Rule 53    inicializacion -> OBJECTID : TYPEID
Rule 54    ramaCase -> OBJECTID : TYPEID DARROW expr
Rule 55    ramaCases -> ramaCase ;
Rule 56    ramaCases -> ramaCases ramaCase ;

Unused terminals:

    CMT_CONST
    NUMBER
    ERROR
    CMT_CONST1

Terminals, with rules where they appear:

(                    : 12 13 15 22 39 40 41 42 43 44
)                    : 12 13 15 22 39 40 41 42 43 44
*                    : 29
+                    : 31
,                    : 17 47 51
-                    : 30
.                    : 41 42 43 44
/                    : 28
:                    : 10 11 12 13 14 52 53 54
;                    : 2 3 8 9 48 49 55 56
<                    : 26
=                    : 24
@                    : 41 42
ASSIGN               : 10 45 52
BOOL_CONST           : 18
CASE                 : 34
CLASS                : 4 5 6 7
CMT_CONST            : 
CMT_CONST1           : 
DARROW               : 54
ELSE                 : 38
ERROR                : 
ESAC                 : 34
FI                   : 38
IF                   : 38
IN                   : 35
INHERITS             : 6 7
INT_CONST            : 20
ISVOID               : 32
LE                   : 25
LET                  : 35
LOOP                 : 37
NEW                  : 33
NOT                  : 23
NUMBER               : 
OBJECTID             : 10 11 12 13 14 21 39 40 41 42 43 44 45 52 53 54
OF                   : 34
POOL                 : 37
STR_CONST            : 19
THEN                 : 38
TYPEID               : 4 5 6 6 7 7 10 11 12 13 14 33 41 42 52 53 54
WHILE                : 37
error                : 
{                    : 4 5 6 7 12 13 36
}                    : 4 5 6 7 12 13 36
~                    : 27

Nonterminals, with rules where they appear:

clase                : 2 3
clases               : 1 3
expr                 : 10 12 13 22 23 24 24 25 25 26 26 27 28 28 29 29 30 30 31 31 32 34 35 37 37 38 38 38 41 42 43 44 45 46 47 48 49 52 54
exprs                : 36 49
exprs_add            : 39 41 43 47
feature              : 8 9
features             : 4 6 9
formal               : 16 17
formales             : 13 15 17
inicializacion       : 50 51
inicializaciones     : 35 51
programa             : 0
ramaCase             : 55 56
ramaCases            : 34 56


state 0

    (0) S' -> . programa
    (1) programa -> . clases
    (2) clases -> . clase ;
    (3) clases -> . clases clase ;
    (4) clase -> . CLASS TYPEID { features }
    (5) clase -> . CLASS TYPEID { }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { features }
    (7) clase -> . CLASS TYPEID INHERITS TYPEID { }
    CLASS           shift and go to state 4

    programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> programa .


state 2

    (1) programa -> clases .
    (3) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID { features }
    (5) clase -> . CLASS TYPEID { }
    (6) clase -> . CLASS TYPEID INHERITS TYPEID { features }
    (7) clase -> . CLASS TYPEID INHERITS TYPEID { }
    $end            reduce using rule 1 (programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (2) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID { features }
    (5) clase -> CLASS . TYPEID { }
    (6) clase -> CLASS . TYPEID INHERITS TYPEID { features }
    (7) clase -> CLASS . TYPEID INHERITS TYPEID { }
    TYPEID          shift and go to state 7


state 5

    (3) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (2) clases -> clase ; .
    CLASS           reduce using rule 2 (clases -> clase ; .)
    $end            reduce using rule 2 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . { features }
    (5) clase -> CLASS TYPEID . { }
    (6) clase -> CLASS TYPEID . INHERITS TYPEID { features }
    (7) clase -> CLASS TYPEID . INHERITS TYPEID { }
    {               shift and go to state 9
    INHERITS        shift and go to state 10


state 8

    (3) clases -> clases clase ; .
    CLASS           reduce using rule 3 (clases -> clases clase ; .)
    $end            reduce using rule 3 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID { . features }
    (5) clase -> CLASS TYPEID { . }
    (8) features -> . feature ;
    (9) features -> . features feature ;
    (10) feature -> . OBJECTID : TYPEID ASSIGN expr
    (11) feature -> . OBJECTID : TYPEID
    (12) feature -> . OBJECTID ( ) : TYPEID { expr }
    (13) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 12
    OBJECTID        shift and go to state 14

    features                       shift and go to state 11
    feature                        shift and go to state 13

state 10

    (6) clase -> CLASS TYPEID INHERITS . TYPEID { features }
    (7) clase -> CLASS TYPEID INHERITS . TYPEID { }
    TYPEID          shift and go to state 15


state 11

    (4) clase -> CLASS TYPEID { features . }
    (9) features -> features . feature ;
    (10) feature -> . OBJECTID : TYPEID ASSIGN expr
    (11) feature -> . OBJECTID : TYPEID
    (12) feature -> . OBJECTID ( ) : TYPEID { expr }
    (13) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 16
    OBJECTID        shift and go to state 14

    feature                        shift and go to state 17

state 12

    (5) clase -> CLASS TYPEID { } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID { } .)


state 13

    (8) features -> feature . ;
    ;               shift and go to state 18


state 14

    (10) feature -> OBJECTID . : TYPEID ASSIGN expr
    (11) feature -> OBJECTID . : TYPEID
    (12) feature -> OBJECTID . ( ) : TYPEID { expr }
    (13) feature -> OBJECTID . ( formales ) : TYPEID { expr }
    :               shift and go to state 19
    (               shift and go to state 20


state 15

    (6) clase -> CLASS TYPEID INHERITS TYPEID . { features }
    (7) clase -> CLASS TYPEID INHERITS TYPEID . { }
    {               shift and go to state 21


state 16

    (4) clase -> CLASS TYPEID { features } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID { features } .)


state 17

    (9) features -> features feature . ;
    ;               shift and go to state 22


state 18

    (8) features -> feature ; .
    }               reduce using rule 8 (features -> feature ; .)
    OBJECTID        reduce using rule 8 (features -> feature ; .)


state 19

    (10) feature -> OBJECTID : . TYPEID ASSIGN expr
    (11) feature -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 23


state 20

    (12) feature -> OBJECTID ( . ) : TYPEID { expr }
    (13) feature -> OBJECTID ( . formales ) : TYPEID { expr }
    (16) formales -> . formal
    (17) formales -> . formales , formal
    (14) formal -> . OBJECTID : TYPEID
    (15) formal -> . ( formales )
    )               shift and go to state 26
    OBJECTID        shift and go to state 24
    (               shift and go to state 25

    formales                       shift and go to state 27
    formal                         shift and go to state 28

state 21

    (6) clase -> CLASS TYPEID INHERITS TYPEID { . features }
    (7) clase -> CLASS TYPEID INHERITS TYPEID { . }
    (8) features -> . feature ;
    (9) features -> . features feature ;
    (10) feature -> . OBJECTID : TYPEID ASSIGN expr
    (11) feature -> . OBJECTID : TYPEID
    (12) feature -> . OBJECTID ( ) : TYPEID { expr }
    (13) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 30
    OBJECTID        shift and go to state 14

    features                       shift and go to state 29
    feature                        shift and go to state 13

state 22

    (9) features -> features feature ; .
    }               reduce using rule 9 (features -> features feature ; .)
    OBJECTID        reduce using rule 9 (features -> features feature ; .)


state 23

    (10) feature -> OBJECTID : TYPEID . ASSIGN expr
    (11) feature -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 31
    ;               reduce using rule 11 (feature -> OBJECTID : TYPEID .)


state 24

    (14) formal -> OBJECTID . : TYPEID
    :               shift and go to state 32


state 25

    (15) formal -> ( . formales )
    (16) formales -> . formal
    (17) formales -> . formales , formal
    (14) formal -> . OBJECTID : TYPEID
    (15) formal -> . ( formales )
    OBJECTID        shift and go to state 24
    (               shift and go to state 25

    formales                       shift and go to state 33
    formal                         shift and go to state 28

state 26

    (12) feature -> OBJECTID ( ) . : TYPEID { expr }
    :               shift and go to state 34


state 27

    (13) feature -> OBJECTID ( formales . ) : TYPEID { expr }
    (17) formales -> formales . , formal
    )               shift and go to state 35
    ,               shift and go to state 36


state 28

    (16) formales -> formal .
    )               reduce using rule 16 (formales -> formal .)
    ,               reduce using rule 16 (formales -> formal .)


state 29

    (6) clase -> CLASS TYPEID INHERITS TYPEID { features . }
    (9) features -> features . feature ;
    (10) feature -> . OBJECTID : TYPEID ASSIGN expr
    (11) feature -> . OBJECTID : TYPEID
    (12) feature -> . OBJECTID ( ) : TYPEID { expr }
    (13) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 37
    OBJECTID        shift and go to state 14

    feature                        shift and go to state 17

state 30

    (7) clase -> CLASS TYPEID INHERITS TYPEID { } .
    ;               reduce using rule 7 (clase -> CLASS TYPEID INHERITS TYPEID { } .)


state 31

    (10) feature -> OBJECTID : TYPEID ASSIGN . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 39

state 32

    (14) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 53


state 33

    (15) formal -> ( formales . )
    (17) formales -> formales . , formal
    )               shift and go to state 54
    ,               shift and go to state 36


state 34

    (12) feature -> OBJECTID ( ) : . TYPEID { expr }
    TYPEID          shift and go to state 55


state 35

    (13) feature -> OBJECTID ( formales ) . : TYPEID { expr }
    :               shift and go to state 56


state 36

    (17) formales -> formales , . formal
    (14) formal -> . OBJECTID : TYPEID
    (15) formal -> . ( formales )
    OBJECTID        shift and go to state 24
    (               shift and go to state 25

    formal                         shift and go to state 57

state 37

    (6) clase -> CLASS TYPEID INHERITS TYPEID { features } .
    ;               reduce using rule 6 (clase -> CLASS TYPEID INHERITS TYPEID { features } .)


state 38

    (21) expr -> OBJECTID .
    (39) expr -> OBJECTID . ( exprs_add )
    (40) expr -> OBJECTID . ( )
    (45) expr -> OBJECTID . ASSIGN expr
    =               reduce using rule 21 (expr -> OBJECTID .)
    LE              reduce using rule 21 (expr -> OBJECTID .)
    <               reduce using rule 21 (expr -> OBJECTID .)
    /               reduce using rule 21 (expr -> OBJECTID .)
    *               reduce using rule 21 (expr -> OBJECTID .)
    -               reduce using rule 21 (expr -> OBJECTID .)
    +               reduce using rule 21 (expr -> OBJECTID .)
    @               reduce using rule 21 (expr -> OBJECTID .)
    .               reduce using rule 21 (expr -> OBJECTID .)
    ;               reduce using rule 21 (expr -> OBJECTID .)
    )               reduce using rule 21 (expr -> OBJECTID .)
    OF              reduce using rule 21 (expr -> OBJECTID .)
    LOOP            reduce using rule 21 (expr -> OBJECTID .)
    THEN            reduce using rule 21 (expr -> OBJECTID .)
    ,               reduce using rule 21 (expr -> OBJECTID .)
    }               reduce using rule 21 (expr -> OBJECTID .)
    POOL            reduce using rule 21 (expr -> OBJECTID .)
    ELSE            reduce using rule 21 (expr -> OBJECTID .)
    IN              reduce using rule 21 (expr -> OBJECTID .)
    FI              reduce using rule 21 (expr -> OBJECTID .)
    (               shift and go to state 58
    ASSIGN          shift and go to state 59


state 39

    (10) feature -> OBJECTID : TYPEID ASSIGN expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 10 (feature -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 40

    (18) expr -> BOOL_CONST .
    =               reduce using rule 18 (expr -> BOOL_CONST .)
    LE              reduce using rule 18 (expr -> BOOL_CONST .)
    <               reduce using rule 18 (expr -> BOOL_CONST .)
    /               reduce using rule 18 (expr -> BOOL_CONST .)
    *               reduce using rule 18 (expr -> BOOL_CONST .)
    -               reduce using rule 18 (expr -> BOOL_CONST .)
    +               reduce using rule 18 (expr -> BOOL_CONST .)
    @               reduce using rule 18 (expr -> BOOL_CONST .)
    .               reduce using rule 18 (expr -> BOOL_CONST .)
    ;               reduce using rule 18 (expr -> BOOL_CONST .)
    )               reduce using rule 18 (expr -> BOOL_CONST .)
    OF              reduce using rule 18 (expr -> BOOL_CONST .)
    LOOP            reduce using rule 18 (expr -> BOOL_CONST .)
    THEN            reduce using rule 18 (expr -> BOOL_CONST .)
    ,               reduce using rule 18 (expr -> BOOL_CONST .)
    }               reduce using rule 18 (expr -> BOOL_CONST .)
    POOL            reduce using rule 18 (expr -> BOOL_CONST .)
    ELSE            reduce using rule 18 (expr -> BOOL_CONST .)
    IN              reduce using rule 18 (expr -> BOOL_CONST .)
    FI              reduce using rule 18 (expr -> BOOL_CONST .)


state 41

    (19) expr -> STR_CONST .
    =               reduce using rule 19 (expr -> STR_CONST .)
    LE              reduce using rule 19 (expr -> STR_CONST .)
    <               reduce using rule 19 (expr -> STR_CONST .)
    /               reduce using rule 19 (expr -> STR_CONST .)
    *               reduce using rule 19 (expr -> STR_CONST .)
    -               reduce using rule 19 (expr -> STR_CONST .)
    +               reduce using rule 19 (expr -> STR_CONST .)
    @               reduce using rule 19 (expr -> STR_CONST .)
    .               reduce using rule 19 (expr -> STR_CONST .)
    ;               reduce using rule 19 (expr -> STR_CONST .)
    )               reduce using rule 19 (expr -> STR_CONST .)
    OF              reduce using rule 19 (expr -> STR_CONST .)
    LOOP            reduce using rule 19 (expr -> STR_CONST .)
    THEN            reduce using rule 19 (expr -> STR_CONST .)
    ,               reduce using rule 19 (expr -> STR_CONST .)
    }               reduce using rule 19 (expr -> STR_CONST .)
    POOL            reduce using rule 19 (expr -> STR_CONST .)
    ELSE            reduce using rule 19 (expr -> STR_CONST .)
    IN              reduce using rule 19 (expr -> STR_CONST .)
    FI              reduce using rule 19 (expr -> STR_CONST .)


state 42

    (20) expr -> INT_CONST .
    =               reduce using rule 20 (expr -> INT_CONST .)
    LE              reduce using rule 20 (expr -> INT_CONST .)
    <               reduce using rule 20 (expr -> INT_CONST .)
    /               reduce using rule 20 (expr -> INT_CONST .)
    *               reduce using rule 20 (expr -> INT_CONST .)
    -               reduce using rule 20 (expr -> INT_CONST .)
    +               reduce using rule 20 (expr -> INT_CONST .)
    @               reduce using rule 20 (expr -> INT_CONST .)
    .               reduce using rule 20 (expr -> INT_CONST .)
    ;               reduce using rule 20 (expr -> INT_CONST .)
    )               reduce using rule 20 (expr -> INT_CONST .)
    OF              reduce using rule 20 (expr -> INT_CONST .)
    LOOP            reduce using rule 20 (expr -> INT_CONST .)
    THEN            reduce using rule 20 (expr -> INT_CONST .)
    ,               reduce using rule 20 (expr -> INT_CONST .)
    }               reduce using rule 20 (expr -> INT_CONST .)
    POOL            reduce using rule 20 (expr -> INT_CONST .)
    ELSE            reduce using rule 20 (expr -> INT_CONST .)
    IN              reduce using rule 20 (expr -> INT_CONST .)
    FI              reduce using rule 20 (expr -> INT_CONST .)


state 43

    (22) expr -> ( . expr )
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 69

state 44

    (23) expr -> NOT . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 70

state 45

    (27) expr -> ~ . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 71

state 46

    (32) expr -> ISVOID . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 72

state 47

    (33) expr -> NEW . TYPEID
    TYPEID          shift and go to state 73


state 48

    (34) expr -> CASE . expr OF ramaCases ESAC
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 74

state 49

    (35) expr -> LET . inicializaciones IN expr
    (50) inicializaciones -> . inicializacion
    (51) inicializaciones -> . inicializacion , inicializaciones
    (52) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    (53) inicializacion -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 77

    inicializaciones               shift and go to state 75
    inicializacion                 shift and go to state 76

state 50

    (36) expr -> { . exprs }
    (48) exprs -> . expr ;
    (49) exprs -> . exprs expr ;
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    exprs                          shift and go to state 78
    expr                           shift and go to state 79

state 51

    (37) expr -> WHILE . expr LOOP expr POOL
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 80

state 52

    (38) expr -> IF . expr THEN expr ELSE expr FI
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 81

state 53

    (14) formal -> OBJECTID : TYPEID .
    )               reduce using rule 14 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 14 (formal -> OBJECTID : TYPEID .)


state 54

    (15) formal -> ( formales ) .
    )               reduce using rule 15 (formal -> ( formales ) .)
    ,               reduce using rule 15 (formal -> ( formales ) .)


state 55

    (12) feature -> OBJECTID ( ) : TYPEID . { expr }
    {               shift and go to state 82


state 56

    (13) feature -> OBJECTID ( formales ) : . TYPEID { expr }
    TYPEID          shift and go to state 83


state 57

    (17) formales -> formales , formal .
    )               reduce using rule 17 (formales -> formales , formal .)
    ,               reduce using rule 17 (formales -> formales , formal .)


state 58

    (39) expr -> OBJECTID ( . exprs_add )
    (40) expr -> OBJECTID ( . )
    (46) exprs_add -> . expr
    (47) exprs_add -> . exprs_add , expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 85
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    exprs_add                      shift and go to state 84
    expr                           shift and go to state 86

state 59

    (45) expr -> OBJECTID ASSIGN . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 87

state 60

    (24) expr -> expr = . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 88

state 61

    (25) expr -> expr LE . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 89

state 62

    (26) expr -> expr < . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 90

state 63

    (28) expr -> expr / . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 91

state 64

    (29) expr -> expr * . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 92

state 65

    (30) expr -> expr - . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 93

state 66

    (31) expr -> expr + . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 94

state 67

    (41) expr -> expr @ . TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 95


state 68

    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    OBJECTID        shift and go to state 96


state 69

    (22) expr -> ( expr . )
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    )               shift and go to state 97
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 70

    (23) expr -> NOT expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    =               reduce using rule 23 (expr -> NOT expr .)
    LE              reduce using rule 23 (expr -> NOT expr .)
    <               reduce using rule 23 (expr -> NOT expr .)
    @               reduce using rule 23 (expr -> NOT expr .)
    .               reduce using rule 23 (expr -> NOT expr .)
    ;               reduce using rule 23 (expr -> NOT expr .)
    )               reduce using rule 23 (expr -> NOT expr .)
    OF              reduce using rule 23 (expr -> NOT expr .)
    LOOP            reduce using rule 23 (expr -> NOT expr .)
    THEN            reduce using rule 23 (expr -> NOT expr .)
    ,               reduce using rule 23 (expr -> NOT expr .)
    }               reduce using rule 23 (expr -> NOT expr .)
    POOL            reduce using rule 23 (expr -> NOT expr .)
    ELSE            reduce using rule 23 (expr -> NOT expr .)
    IN              reduce using rule 23 (expr -> NOT expr .)
    FI              reduce using rule 23 (expr -> NOT expr .)
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66


state 71

    (27) expr -> ~ expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 27 (expr -> ~ expr .)
    )               reduce using rule 27 (expr -> ~ expr .)
    OF              reduce using rule 27 (expr -> ~ expr .)
    LOOP            reduce using rule 27 (expr -> ~ expr .)
    THEN            reduce using rule 27 (expr -> ~ expr .)
    ,               reduce using rule 27 (expr -> ~ expr .)
    }               reduce using rule 27 (expr -> ~ expr .)
    POOL            reduce using rule 27 (expr -> ~ expr .)
    ELSE            reduce using rule 27 (expr -> ~ expr .)
    IN              reduce using rule 27 (expr -> ~ expr .)
    FI              reduce using rule 27 (expr -> ~ expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 72

    (32) expr -> ISVOID expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    =               reduce using rule 32 (expr -> ISVOID expr .)
    LE              reduce using rule 32 (expr -> ISVOID expr .)
    <               reduce using rule 32 (expr -> ISVOID expr .)
    /               reduce using rule 32 (expr -> ISVOID expr .)
    *               reduce using rule 32 (expr -> ISVOID expr .)
    -               reduce using rule 32 (expr -> ISVOID expr .)
    +               reduce using rule 32 (expr -> ISVOID expr .)
    @               reduce using rule 32 (expr -> ISVOID expr .)
    .               reduce using rule 32 (expr -> ISVOID expr .)
    ;               reduce using rule 32 (expr -> ISVOID expr .)
    )               reduce using rule 32 (expr -> ISVOID expr .)
    OF              reduce using rule 32 (expr -> ISVOID expr .)
    LOOP            reduce using rule 32 (expr -> ISVOID expr .)
    THEN            reduce using rule 32 (expr -> ISVOID expr .)
    ,               reduce using rule 32 (expr -> ISVOID expr .)
    }               reduce using rule 32 (expr -> ISVOID expr .)
    POOL            reduce using rule 32 (expr -> ISVOID expr .)
    ELSE            reduce using rule 32 (expr -> ISVOID expr .)
    IN              reduce using rule 32 (expr -> ISVOID expr .)
    FI              reduce using rule 32 (expr -> ISVOID expr .)


state 73

    (33) expr -> NEW TYPEID .
    =               reduce using rule 33 (expr -> NEW TYPEID .)
    LE              reduce using rule 33 (expr -> NEW TYPEID .)
    <               reduce using rule 33 (expr -> NEW TYPEID .)
    /               reduce using rule 33 (expr -> NEW TYPEID .)
    *               reduce using rule 33 (expr -> NEW TYPEID .)
    -               reduce using rule 33 (expr -> NEW TYPEID .)
    +               reduce using rule 33 (expr -> NEW TYPEID .)
    @               reduce using rule 33 (expr -> NEW TYPEID .)
    .               reduce using rule 33 (expr -> NEW TYPEID .)
    ;               reduce using rule 33 (expr -> NEW TYPEID .)
    )               reduce using rule 33 (expr -> NEW TYPEID .)
    OF              reduce using rule 33 (expr -> NEW TYPEID .)
    LOOP            reduce using rule 33 (expr -> NEW TYPEID .)
    THEN            reduce using rule 33 (expr -> NEW TYPEID .)
    ,               reduce using rule 33 (expr -> NEW TYPEID .)
    }               reduce using rule 33 (expr -> NEW TYPEID .)
    POOL            reduce using rule 33 (expr -> NEW TYPEID .)
    ELSE            reduce using rule 33 (expr -> NEW TYPEID .)
    IN              reduce using rule 33 (expr -> NEW TYPEID .)
    FI              reduce using rule 33 (expr -> NEW TYPEID .)


state 74

    (34) expr -> CASE expr . OF ramaCases ESAC
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    OF              shift and go to state 98
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 75

    (35) expr -> LET inicializaciones . IN expr
    IN              shift and go to state 99


state 76

    (50) inicializaciones -> inicializacion .
    (51) inicializaciones -> inicializacion . , inicializaciones
    IN              reduce using rule 50 (inicializaciones -> inicializacion .)
    ,               shift and go to state 100


state 77

    (52) inicializacion -> OBJECTID . : TYPEID ASSIGN expr
    (53) inicializacion -> OBJECTID . : TYPEID
    :               shift and go to state 101


state 78

    (36) expr -> { exprs . }
    (49) exprs -> exprs . expr ;
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    }               shift and go to state 102
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 103

state 79

    (48) exprs -> expr . ;
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 104
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 80

    (37) expr -> WHILE expr . LOOP expr POOL
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    LOOP            shift and go to state 105
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 81

    (38) expr -> IF expr . THEN expr ELSE expr FI
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    THEN            shift and go to state 106
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 82

    (12) feature -> OBJECTID ( ) : TYPEID { . expr }
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 107

state 83

    (13) feature -> OBJECTID ( formales ) : TYPEID . { expr }
    {               shift and go to state 108


state 84

    (39) expr -> OBJECTID ( exprs_add . )
    (47) exprs_add -> exprs_add . , expr
    )               shift and go to state 109
    ,               shift and go to state 110


state 85

    (40) expr -> OBJECTID ( ) .
    =               reduce using rule 40 (expr -> OBJECTID ( ) .)
    LE              reduce using rule 40 (expr -> OBJECTID ( ) .)
    <               reduce using rule 40 (expr -> OBJECTID ( ) .)
    /               reduce using rule 40 (expr -> OBJECTID ( ) .)
    *               reduce using rule 40 (expr -> OBJECTID ( ) .)
    -               reduce using rule 40 (expr -> OBJECTID ( ) .)
    +               reduce using rule 40 (expr -> OBJECTID ( ) .)
    @               reduce using rule 40 (expr -> OBJECTID ( ) .)
    .               reduce using rule 40 (expr -> OBJECTID ( ) .)
    ;               reduce using rule 40 (expr -> OBJECTID ( ) .)
    )               reduce using rule 40 (expr -> OBJECTID ( ) .)
    OF              reduce using rule 40 (expr -> OBJECTID ( ) .)
    LOOP            reduce using rule 40 (expr -> OBJECTID ( ) .)
    THEN            reduce using rule 40 (expr -> OBJECTID ( ) .)
    ,               reduce using rule 40 (expr -> OBJECTID ( ) .)
    }               reduce using rule 40 (expr -> OBJECTID ( ) .)
    POOL            reduce using rule 40 (expr -> OBJECTID ( ) .)
    ELSE            reduce using rule 40 (expr -> OBJECTID ( ) .)
    IN              reduce using rule 40 (expr -> OBJECTID ( ) .)
    FI              reduce using rule 40 (expr -> OBJECTID ( ) .)


state 86

    (46) exprs_add -> expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    )               reduce using rule 46 (exprs_add -> expr .)
    ,               reduce using rule 46 (exprs_add -> expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 87

    (45) expr -> OBJECTID ASSIGN expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    =               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    LE              reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    <               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    @               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    .               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    ;               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    )               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    OF              reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    LOOP            reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    THEN            reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    ,               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    }               reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    POOL            reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    ELSE            reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    IN              reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    FI              reduce using rule 45 (expr -> OBJECTID ASSIGN expr .)
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66


state 88

    (24) expr -> expr = expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 24 (expr -> expr = expr .)
    )               reduce using rule 24 (expr -> expr = expr .)
    OF              reduce using rule 24 (expr -> expr = expr .)
    LOOP            reduce using rule 24 (expr -> expr = expr .)
    THEN            reduce using rule 24 (expr -> expr = expr .)
    ,               reduce using rule 24 (expr -> expr = expr .)
    }               reduce using rule 24 (expr -> expr = expr .)
    POOL            reduce using rule 24 (expr -> expr = expr .)
    ELSE            reduce using rule 24 (expr -> expr = expr .)
    IN              reduce using rule 24 (expr -> expr = expr .)
    FI              reduce using rule 24 (expr -> expr = expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 89

    (25) expr -> expr LE expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 25 (expr -> expr LE expr .)
    )               reduce using rule 25 (expr -> expr LE expr .)
    OF              reduce using rule 25 (expr -> expr LE expr .)
    LOOP            reduce using rule 25 (expr -> expr LE expr .)
    THEN            reduce using rule 25 (expr -> expr LE expr .)
    ,               reduce using rule 25 (expr -> expr LE expr .)
    }               reduce using rule 25 (expr -> expr LE expr .)
    POOL            reduce using rule 25 (expr -> expr LE expr .)
    ELSE            reduce using rule 25 (expr -> expr LE expr .)
    IN              reduce using rule 25 (expr -> expr LE expr .)
    FI              reduce using rule 25 (expr -> expr LE expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 90

    (26) expr -> expr < expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 26 (expr -> expr < expr .)
    )               reduce using rule 26 (expr -> expr < expr .)
    OF              reduce using rule 26 (expr -> expr < expr .)
    LOOP            reduce using rule 26 (expr -> expr < expr .)
    THEN            reduce using rule 26 (expr -> expr < expr .)
    ,               reduce using rule 26 (expr -> expr < expr .)
    }               reduce using rule 26 (expr -> expr < expr .)
    POOL            reduce using rule 26 (expr -> expr < expr .)
    ELSE            reduce using rule 26 (expr -> expr < expr .)
    IN              reduce using rule 26 (expr -> expr < expr .)
    FI              reduce using rule 26 (expr -> expr < expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 91

    (28) expr -> expr / expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    =               reduce using rule 28 (expr -> expr / expr .)
    LE              reduce using rule 28 (expr -> expr / expr .)
    <               reduce using rule 28 (expr -> expr / expr .)
    /               reduce using rule 28 (expr -> expr / expr .)
    *               reduce using rule 28 (expr -> expr / expr .)
    -               reduce using rule 28 (expr -> expr / expr .)
    +               reduce using rule 28 (expr -> expr / expr .)
    @               reduce using rule 28 (expr -> expr / expr .)
    .               reduce using rule 28 (expr -> expr / expr .)
    ;               reduce using rule 28 (expr -> expr / expr .)
    )               reduce using rule 28 (expr -> expr / expr .)
    OF              reduce using rule 28 (expr -> expr / expr .)
    LOOP            reduce using rule 28 (expr -> expr / expr .)
    THEN            reduce using rule 28 (expr -> expr / expr .)
    ,               reduce using rule 28 (expr -> expr / expr .)
    }               reduce using rule 28 (expr -> expr / expr .)
    POOL            reduce using rule 28 (expr -> expr / expr .)
    ELSE            reduce using rule 28 (expr -> expr / expr .)
    IN              reduce using rule 28 (expr -> expr / expr .)
    FI              reduce using rule 28 (expr -> expr / expr .)


state 92

    (29) expr -> expr * expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    =               reduce using rule 29 (expr -> expr * expr .)
    LE              reduce using rule 29 (expr -> expr * expr .)
    <               reduce using rule 29 (expr -> expr * expr .)
    /               reduce using rule 29 (expr -> expr * expr .)
    *               reduce using rule 29 (expr -> expr * expr .)
    -               reduce using rule 29 (expr -> expr * expr .)
    +               reduce using rule 29 (expr -> expr * expr .)
    @               reduce using rule 29 (expr -> expr * expr .)
    .               reduce using rule 29 (expr -> expr * expr .)
    ;               reduce using rule 29 (expr -> expr * expr .)
    )               reduce using rule 29 (expr -> expr * expr .)
    OF              reduce using rule 29 (expr -> expr * expr .)
    LOOP            reduce using rule 29 (expr -> expr * expr .)
    THEN            reduce using rule 29 (expr -> expr * expr .)
    ,               reduce using rule 29 (expr -> expr * expr .)
    }               reduce using rule 29 (expr -> expr * expr .)
    POOL            reduce using rule 29 (expr -> expr * expr .)
    ELSE            reduce using rule 29 (expr -> expr * expr .)
    IN              reduce using rule 29 (expr -> expr * expr .)
    FI              reduce using rule 29 (expr -> expr * expr .)


state 93

    (30) expr -> expr - expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    =               reduce using rule 30 (expr -> expr - expr .)
    LE              reduce using rule 30 (expr -> expr - expr .)
    <               reduce using rule 30 (expr -> expr - expr .)
    -               reduce using rule 30 (expr -> expr - expr .)
    +               reduce using rule 30 (expr -> expr - expr .)
    @               reduce using rule 30 (expr -> expr - expr .)
    .               reduce using rule 30 (expr -> expr - expr .)
    ;               reduce using rule 30 (expr -> expr - expr .)
    )               reduce using rule 30 (expr -> expr - expr .)
    OF              reduce using rule 30 (expr -> expr - expr .)
    LOOP            reduce using rule 30 (expr -> expr - expr .)
    THEN            reduce using rule 30 (expr -> expr - expr .)
    ,               reduce using rule 30 (expr -> expr - expr .)
    }               reduce using rule 30 (expr -> expr - expr .)
    POOL            reduce using rule 30 (expr -> expr - expr .)
    ELSE            reduce using rule 30 (expr -> expr - expr .)
    IN              reduce using rule 30 (expr -> expr - expr .)
    FI              reduce using rule 30 (expr -> expr - expr .)
    /               shift and go to state 63
    *               shift and go to state 64


state 94

    (31) expr -> expr + expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    =               reduce using rule 31 (expr -> expr + expr .)
    LE              reduce using rule 31 (expr -> expr + expr .)
    <               reduce using rule 31 (expr -> expr + expr .)
    -               reduce using rule 31 (expr -> expr + expr .)
    +               reduce using rule 31 (expr -> expr + expr .)
    @               reduce using rule 31 (expr -> expr + expr .)
    .               reduce using rule 31 (expr -> expr + expr .)
    ;               reduce using rule 31 (expr -> expr + expr .)
    )               reduce using rule 31 (expr -> expr + expr .)
    OF              reduce using rule 31 (expr -> expr + expr .)
    LOOP            reduce using rule 31 (expr -> expr + expr .)
    THEN            reduce using rule 31 (expr -> expr + expr .)
    ,               reduce using rule 31 (expr -> expr + expr .)
    }               reduce using rule 31 (expr -> expr + expr .)
    POOL            reduce using rule 31 (expr -> expr + expr .)
    ELSE            reduce using rule 31 (expr -> expr + expr .)
    IN              reduce using rule 31 (expr -> expr + expr .)
    FI              reduce using rule 31 (expr -> expr + expr .)
    /               shift and go to state 63
    *               shift and go to state 64


state 95

    (41) expr -> expr @ TYPEID . . OBJECTID ( exprs_add )
    (42) expr -> expr @ TYPEID . . OBJECTID ( )
    .               shift and go to state 111


state 96

    (43) expr -> expr . OBJECTID . ( exprs_add )
    (44) expr -> expr . OBJECTID . ( )
    (               shift and go to state 112


state 97

    (22) expr -> ( expr ) .
    =               reduce using rule 22 (expr -> ( expr ) .)
    LE              reduce using rule 22 (expr -> ( expr ) .)
    <               reduce using rule 22 (expr -> ( expr ) .)
    /               reduce using rule 22 (expr -> ( expr ) .)
    *               reduce using rule 22 (expr -> ( expr ) .)
    -               reduce using rule 22 (expr -> ( expr ) .)
    +               reduce using rule 22 (expr -> ( expr ) .)
    @               reduce using rule 22 (expr -> ( expr ) .)
    .               reduce using rule 22 (expr -> ( expr ) .)
    ;               reduce using rule 22 (expr -> ( expr ) .)
    )               reduce using rule 22 (expr -> ( expr ) .)
    OF              reduce using rule 22 (expr -> ( expr ) .)
    LOOP            reduce using rule 22 (expr -> ( expr ) .)
    THEN            reduce using rule 22 (expr -> ( expr ) .)
    ,               reduce using rule 22 (expr -> ( expr ) .)
    }               reduce using rule 22 (expr -> ( expr ) .)
    POOL            reduce using rule 22 (expr -> ( expr ) .)
    ELSE            reduce using rule 22 (expr -> ( expr ) .)
    IN              reduce using rule 22 (expr -> ( expr ) .)
    FI              reduce using rule 22 (expr -> ( expr ) .)


state 98

    (34) expr -> CASE expr OF . ramaCases ESAC
    (55) ramaCases -> . ramaCase ;
    (56) ramaCases -> . ramaCases ramaCase ;
    (54) ramaCase -> . OBJECTID : TYPEID DARROW expr
    OBJECTID        shift and go to state 115

    ramaCases                      shift and go to state 113
    ramaCase                       shift and go to state 114

state 99

    (35) expr -> LET inicializaciones IN . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 116

state 100

    (51) inicializaciones -> inicializacion , . inicializaciones
    (50) inicializaciones -> . inicializacion
    (51) inicializaciones -> . inicializacion , inicializaciones
    (52) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    (53) inicializacion -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 77

    inicializacion                 shift and go to state 76
    inicializaciones               shift and go to state 117

state 101

    (52) inicializacion -> OBJECTID : . TYPEID ASSIGN expr
    (53) inicializacion -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 118


state 102

    (36) expr -> { exprs } .
    =               reduce using rule 36 (expr -> { exprs } .)
    LE              reduce using rule 36 (expr -> { exprs } .)
    <               reduce using rule 36 (expr -> { exprs } .)
    /               reduce using rule 36 (expr -> { exprs } .)
    *               reduce using rule 36 (expr -> { exprs } .)
    -               reduce using rule 36 (expr -> { exprs } .)
    +               reduce using rule 36 (expr -> { exprs } .)
    @               reduce using rule 36 (expr -> { exprs } .)
    .               reduce using rule 36 (expr -> { exprs } .)
    ;               reduce using rule 36 (expr -> { exprs } .)
    )               reduce using rule 36 (expr -> { exprs } .)
    OF              reduce using rule 36 (expr -> { exprs } .)
    LOOP            reduce using rule 36 (expr -> { exprs } .)
    THEN            reduce using rule 36 (expr -> { exprs } .)
    ,               reduce using rule 36 (expr -> { exprs } .)
    }               reduce using rule 36 (expr -> { exprs } .)
    POOL            reduce using rule 36 (expr -> { exprs } .)
    ELSE            reduce using rule 36 (expr -> { exprs } .)
    IN              reduce using rule 36 (expr -> { exprs } .)
    FI              reduce using rule 36 (expr -> { exprs } .)


state 103

    (49) exprs -> exprs expr . ;
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 119
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 104

    (48) exprs -> expr ; .
    }               reduce using rule 48 (exprs -> expr ; .)
    BOOL_CONST      reduce using rule 48 (exprs -> expr ; .)
    STR_CONST       reduce using rule 48 (exprs -> expr ; .)
    INT_CONST       reduce using rule 48 (exprs -> expr ; .)
    OBJECTID        reduce using rule 48 (exprs -> expr ; .)
    (               reduce using rule 48 (exprs -> expr ; .)
    NOT             reduce using rule 48 (exprs -> expr ; .)
    ~               reduce using rule 48 (exprs -> expr ; .)
    ISVOID          reduce using rule 48 (exprs -> expr ; .)
    NEW             reduce using rule 48 (exprs -> expr ; .)
    CASE            reduce using rule 48 (exprs -> expr ; .)
    LET             reduce using rule 48 (exprs -> expr ; .)
    {               reduce using rule 48 (exprs -> expr ; .)
    WHILE           reduce using rule 48 (exprs -> expr ; .)
    IF              reduce using rule 48 (exprs -> expr ; .)


state 105

    (37) expr -> WHILE expr LOOP . expr POOL
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 120

state 106

    (38) expr -> IF expr THEN . expr ELSE expr FI
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 121

state 107

    (12) feature -> OBJECTID ( ) : TYPEID { expr . }
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    }               shift and go to state 122
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 108

    (13) feature -> OBJECTID ( formales ) : TYPEID { . expr }
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 123

state 109

    (39) expr -> OBJECTID ( exprs_add ) .
    =               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    LE              reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    <               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    /               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    *               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    -               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    +               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    @               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    .               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    ;               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    )               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    OF              reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    ,               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    }               reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    IN              reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)
    FI              reduce using rule 39 (expr -> OBJECTID ( exprs_add ) .)


state 110

    (47) exprs_add -> exprs_add , . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 124

state 111

    (41) expr -> expr @ TYPEID . . OBJECTID ( exprs_add )
    (42) expr -> expr @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 125


state 112

    (43) expr -> expr . OBJECTID ( . exprs_add )
    (44) expr -> expr . OBJECTID ( . )
    (46) exprs_add -> . expr
    (47) exprs_add -> . exprs_add , expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 127
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 86
    exprs_add                      shift and go to state 126

state 113

    (34) expr -> CASE expr OF ramaCases . ESAC
    (56) ramaCases -> ramaCases . ramaCase ;
    (54) ramaCase -> . OBJECTID : TYPEID DARROW expr
    ESAC            shift and go to state 128
    OBJECTID        shift and go to state 115

    ramaCase                       shift and go to state 129

state 114

    (55) ramaCases -> ramaCase . ;
    ;               shift and go to state 130


state 115

    (54) ramaCase -> OBJECTID . : TYPEID DARROW expr
    :               shift and go to state 131


state 116

    (35) expr -> LET inicializaciones IN expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    )               reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    OF              reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    LOOP            reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    THEN            reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    ,               reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    }               reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    POOL            reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    ELSE            reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    IN              reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    FI              reduce using rule 35 (expr -> LET inicializaciones IN expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 117

    (51) inicializaciones -> inicializacion , inicializaciones .
    IN              reduce using rule 51 (inicializaciones -> inicializacion , inicializaciones .)


state 118

    (52) inicializacion -> OBJECTID : TYPEID . ASSIGN expr
    (53) inicializacion -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 132
    ,               reduce using rule 53 (inicializacion -> OBJECTID : TYPEID .)
    IN              reduce using rule 53 (inicializacion -> OBJECTID : TYPEID .)


state 119

    (49) exprs -> exprs expr ; .
    }               reduce using rule 49 (exprs -> exprs expr ; .)
    BOOL_CONST      reduce using rule 49 (exprs -> exprs expr ; .)
    STR_CONST       reduce using rule 49 (exprs -> exprs expr ; .)
    INT_CONST       reduce using rule 49 (exprs -> exprs expr ; .)
    OBJECTID        reduce using rule 49 (exprs -> exprs expr ; .)
    (               reduce using rule 49 (exprs -> exprs expr ; .)
    NOT             reduce using rule 49 (exprs -> exprs expr ; .)
    ~               reduce using rule 49 (exprs -> exprs expr ; .)
    ISVOID          reduce using rule 49 (exprs -> exprs expr ; .)
    NEW             reduce using rule 49 (exprs -> exprs expr ; .)
    CASE            reduce using rule 49 (exprs -> exprs expr ; .)
    LET             reduce using rule 49 (exprs -> exprs expr ; .)
    {               reduce using rule 49 (exprs -> exprs expr ; .)
    WHILE           reduce using rule 49 (exprs -> exprs expr ; .)
    IF              reduce using rule 49 (exprs -> exprs expr ; .)


state 120

    (37) expr -> WHILE expr LOOP expr . POOL
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    POOL            shift and go to state 133
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 121

    (38) expr -> IF expr THEN expr . ELSE expr FI
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    ELSE            shift and go to state 134
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 122

    (12) feature -> OBJECTID ( ) : TYPEID { expr } .
    ;               reduce using rule 12 (feature -> OBJECTID ( ) : TYPEID { expr } .)


state 123

    (13) feature -> OBJECTID ( formales ) : TYPEID { expr . }
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    }               shift and go to state 135
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 124

    (47) exprs_add -> exprs_add , expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    )               reduce using rule 47 (exprs_add -> exprs_add , expr .)
    ,               reduce using rule 47 (exprs_add -> exprs_add , expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 125

    (41) expr -> expr @ TYPEID . OBJECTID . ( exprs_add )
    (42) expr -> expr @ TYPEID . OBJECTID . ( )
    (               shift and go to state 136


state 126

    (43) expr -> expr . OBJECTID ( exprs_add . )
    (47) exprs_add -> exprs_add . , expr
    )               shift and go to state 137
    ,               shift and go to state 110


state 127

    (44) expr -> expr . OBJECTID ( ) .
    =               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    LE              reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    <               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    /               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    *               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    -               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    +               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    @               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    .               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    ;               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    )               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    OF              reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    LOOP            reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    THEN            reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    ,               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    }               reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    POOL            reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    ELSE            reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    IN              reduce using rule 44 (expr -> expr . OBJECTID ( ) .)
    FI              reduce using rule 44 (expr -> expr . OBJECTID ( ) .)


state 128

    (34) expr -> CASE expr OF ramaCases ESAC .
    =               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    LE              reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    <               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    /               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    *               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    -               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    +               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    @               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    .               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    ;               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    )               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    OF              reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    LOOP            reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    THEN            reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    ,               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    }               reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    POOL            reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    ELSE            reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    IN              reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)
    FI              reduce using rule 34 (expr -> CASE expr OF ramaCases ESAC .)


state 129

    (56) ramaCases -> ramaCases ramaCase . ;
    ;               shift and go to state 138


state 130

    (55) ramaCases -> ramaCase ; .
    ESAC            reduce using rule 55 (ramaCases -> ramaCase ; .)
    OBJECTID        reduce using rule 55 (ramaCases -> ramaCase ; .)


state 131

    (54) ramaCase -> OBJECTID : . TYPEID DARROW expr
    TYPEID          shift and go to state 139


state 132

    (52) inicializacion -> OBJECTID : TYPEID ASSIGN . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 140

state 133

    (37) expr -> WHILE expr LOOP expr POOL .
    =               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    LE              reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    <               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    /               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    *               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    -               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    +               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    @               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    .               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    ;               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    )               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    OF              reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    LOOP            reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    THEN            reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    ,               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    }               reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    POOL            reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    ELSE            reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    IN              reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)
    FI              reduce using rule 37 (expr -> WHILE expr LOOP expr POOL .)


state 134

    (38) expr -> IF expr THEN expr ELSE . expr FI
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 141

state 135

    (13) feature -> OBJECTID ( formales ) : TYPEID { expr } .
    ;               reduce using rule 13 (feature -> OBJECTID ( formales ) : TYPEID { expr } .)


state 136

    (41) expr -> expr @ TYPEID . OBJECTID ( . exprs_add )
    (42) expr -> expr @ TYPEID . OBJECTID ( . )
    (46) exprs_add -> . expr
    (47) exprs_add -> . exprs_add , expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    )               shift and go to state 143
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 86
    exprs_add                      shift and go to state 142

state 137

    (43) expr -> expr . OBJECTID ( exprs_add ) .
    =               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    LE              reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    <               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    /               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    *               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    -               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    +               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    @               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    .               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    ;               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    )               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    OF              reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    ,               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    }               reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    IN              reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)
    FI              reduce using rule 43 (expr -> expr . OBJECTID ( exprs_add ) .)


state 138

    (56) ramaCases -> ramaCases ramaCase ; .
    ESAC            reduce using rule 56 (ramaCases -> ramaCases ramaCase ; .)
    OBJECTID        reduce using rule 56 (ramaCases -> ramaCases ramaCase ; .)


state 139

    (54) ramaCase -> OBJECTID : TYPEID . DARROW expr
    DARROW          shift and go to state 144


state 140

    (52) inicializacion -> OBJECTID : TYPEID ASSIGN expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    ,               reduce using rule 52 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    IN              reduce using rule 52 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 141

    (38) expr -> IF expr THEN expr ELSE expr . FI
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    FI              shift and go to state 145
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


state 142

    (41) expr -> expr @ TYPEID . OBJECTID ( exprs_add . )
    (47) exprs_add -> exprs_add . , expr
    )               shift and go to state 146
    ,               shift and go to state 110


state 143

    (42) expr -> expr @ TYPEID . OBJECTID ( ) .
    =               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 42 (expr -> expr @ TYPEID . OBJECTID ( ) .)


state 144

    (54) ramaCase -> OBJECTID : TYPEID DARROW . expr
    (18) expr -> . BOOL_CONST
    (19) expr -> . STR_CONST
    (20) expr -> . INT_CONST
    (21) expr -> . OBJECTID
    (22) expr -> . ( expr )
    (23) expr -> . NOT expr
    (24) expr -> . expr = expr
    (25) expr -> . expr LE expr
    (26) expr -> . expr < expr
    (27) expr -> . ~ expr
    (28) expr -> . expr / expr
    (29) expr -> . expr * expr
    (30) expr -> . expr - expr
    (31) expr -> . expr + expr
    (32) expr -> . ISVOID expr
    (33) expr -> . NEW TYPEID
    (34) expr -> . CASE expr OF ramaCases ESAC
    (35) expr -> . LET inicializaciones IN expr
    (36) expr -> . { exprs }
    (37) expr -> . WHILE expr LOOP expr POOL
    (38) expr -> . IF expr THEN expr ELSE expr FI
    (39) expr -> . OBJECTID ( exprs_add )
    (40) expr -> . OBJECTID ( )
    (41) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> . expr @ TYPEID . OBJECTID ( )
    (43) expr -> . expr . OBJECTID ( exprs_add )
    (44) expr -> . expr . OBJECTID ( )
    (45) expr -> . OBJECTID ASSIGN expr
    BOOL_CONST      shift and go to state 40
    STR_CONST       shift and go to state 41
    INT_CONST       shift and go to state 42
    OBJECTID        shift and go to state 38
    (               shift and go to state 43
    NOT             shift and go to state 44
    ~               shift and go to state 45
    ISVOID          shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    LET             shift and go to state 49
    {               shift and go to state 50
    WHILE           shift and go to state 51
    IF              shift and go to state 52

    expr                           shift and go to state 147

state 145

    (38) expr -> IF expr THEN expr ELSE expr FI .
    =               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    LE              reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    <               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    /               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    *               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    -               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    +               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    @               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    .               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    ;               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    )               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    OF              reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    LOOP            reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    THEN            reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    ,               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    }               reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    POOL            reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    ELSE            reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    IN              reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)
    FI              reduce using rule 38 (expr -> IF expr THEN expr ELSE expr FI .)


state 146

    (41) expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .
    =               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    LE              reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    <               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    /               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    *               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    -               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    +               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    @               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    .               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ;               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    )               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    OF              reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ,               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    }               reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    IN              reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    FI              reduce using rule 41 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)


state 147

    (54) ramaCase -> OBJECTID : TYPEID DARROW expr .
    (24) expr -> expr . = expr
    (25) expr -> expr . LE expr
    (26) expr -> expr . < expr
    (28) expr -> expr . / expr
    (29) expr -> expr . * expr
    (30) expr -> expr . - expr
    (31) expr -> expr . + expr
    (41) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (42) expr -> expr . @ TYPEID . OBJECTID ( )
    (43) expr -> expr . . OBJECTID ( exprs_add )
    (44) expr -> expr . . OBJECTID ( )
    ;               reduce using rule 54 (ramaCase -> OBJECTID : TYPEID DARROW expr .)
    =               shift and go to state 60
    LE              shift and go to state 61
    <               shift and go to state 62
    /               shift and go to state 63
    *               shift and go to state 64
    -               shift and go to state 65
    +               shift and go to state 66
    @               shift and go to state 67
    .               shift and go to state 68


Conflicts:

shift/reduce conflict for = in state 71 resolved as shift
shift/reduce conflict for LE in state 71 resolved as shift
shift/reduce conflict for < in state 71 resolved as shift
shift/reduce conflict for / in state 71 resolved as shift
shift/reduce conflict for * in state 71 resolved as shift
shift/reduce conflict for - in state 71 resolved as shift
shift/reduce conflict for + in state 71 resolved as shift
shift/reduce conflict for @ in state 71 resolved as shift
shift/reduce conflict for . in state 71 resolved as shift
shift/reduce conflict for = in state 88 resolved as shift
shift/reduce conflict for LE in state 88 resolved as shift
shift/reduce conflict for < in state 88 resolved as shift
shift/reduce conflict for / in state 88 resolved as shift
shift/reduce conflict for * in state 88 resolved as shift
shift/reduce conflict for - in state 88 resolved as shift
shift/reduce conflict for + in state 88 resolved as shift
shift/reduce conflict for @ in state 88 resolved as shift
shift/reduce conflict for . in state 88 resolved as shift
shift/reduce conflict for = in state 89 resolved as shift
shift/reduce conflict for LE in state 89 resolved as shift
shift/reduce conflict for < in state 89 resolved as shift
shift/reduce conflict for / in state 89 resolved as shift
shift/reduce conflict for * in state 89 resolved as shift
shift/reduce conflict for - in state 89 resolved as shift
shift/reduce conflict for + in state 89 resolved as shift
shift/reduce conflict for @ in state 89 resolved as shift
shift/reduce conflict for . in state 89 resolved as shift
shift/reduce conflict for = in state 90 resolved as shift
shift/reduce conflict for LE in state 90 resolved as shift
shift/reduce conflict for < in state 90 resolved as shift
shift/reduce conflict for / in state 90 resolved as shift
shift/reduce conflict for * in state 90 resolved as shift
shift/reduce conflict for - in state 90 resolved as shift
shift/reduce conflict for + in state 90 resolved as shift
shift/reduce conflict for @ in state 90 resolved as shift
shift/reduce conflict for . in state 90 resolved as shift
shift/reduce conflict for = in state 116 resolved as shift
shift/reduce conflict for LE in state 116 resolved as shift
shift/reduce conflict for < in state 116 resolved as shift
shift/reduce conflict for / in state 116 resolved as shift
shift/reduce conflict for * in state 116 resolved as shift
shift/reduce conflict for - in state 116 resolved as shift
shift/reduce conflict for + in state 116 resolved as shift
shift/reduce conflict for @ in state 116 resolved as shift
shift/reduce conflict for . in state 116 resolved as shift