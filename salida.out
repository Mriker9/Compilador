Grammar:

Rule 0     S' -> programa
Rule 1     programa -> clases
Rule 2     clases -> clase ;
Rule 3     clases -> clases clase ;
Rule 4     clase -> CLASS TYPEID { features }
Rule 5     clase -> CLASS TYPEID INHERITS TYPEID { features }
Rule 6     features -> feature ;
Rule 7     features -> features feature ;
Rule 8     feature -> OBJECTID : TYPEID ASSIGN expr  [precedence=right, level=1]
Rule 9     feature -> OBJECTID : TYPEID
Rule 10    feature -> OBJECTID ( ) : TYPEID { expr }
Rule 11    feature -> OBJECTID ( formales ) : TYPEID { expr }
Rule 12    formal -> OBJECTID : TYPEID
Rule 13    formal -> ( formales )
Rule 14    formales -> formal
Rule 15    formales -> formales , formal
Rule 16    expr -> BOOL_CONST
Rule 17    expr -> STR_CONST
Rule 18    expr -> INT_CONST
Rule 19    expr -> OBJECTID
Rule 20    expr -> ( expr )
Rule 21    expr -> NOT expr  [precedence=left, level=2]
Rule 22    expr -> expr = expr
Rule 23    expr -> expr LE expr
Rule 24    expr -> expr < expr
Rule 25    expr -> ~ expr
Rule 26    expr -> expr / expr  [precedence=left, level=4]
Rule 27    expr -> expr * expr  [precedence=left, level=4]
Rule 28    expr -> expr - expr  [precedence=left, level=3]
Rule 29    expr -> expr + expr  [precedence=left, level=3]
Rule 30    expr -> ISVOID expr  [precedence=left, level=5]
Rule 31    expr -> NEW TYPEID
Rule 32    expr -> CASE expr OF ramaCases ESAC
Rule 33    expr -> LET inicializaciones IN expr
Rule 34    expr -> _1_exprs_repeat
Rule 35    _1_exprs_repeat -> _1_exprs_items
Rule 36    _1_exprs_repeat -> <empty>
Rule 37    _1_exprs_items -> _1_exprs_items _1_exprs_item
Rule 38    _1_exprs_items -> _1_exprs_item
Rule 39    _1_exprs_item -> exprs
Rule 40    expr -> WHILE expr LOOP expr POOL
Rule 41    expr -> IF expr THEN expr ELSE expr FI
Rule 42    expr -> OBJECTID ( exprs_add )
Rule 43    expr -> OBJECTID ( )
Rule 44    expr -> expr @ TYPEID . OBJECTID ( exprs_add )
Rule 45    expr -> expr @ TYPEID . OBJECTID ( )
Rule 46    expr -> expr . OBJECTID ( exprs_add )
Rule 47    expr -> expr . OBJECTID ( )
Rule 48    expr -> OBJECTID ASSIGN expr  [precedence=right, level=1]
Rule 49    exprs_add -> expr
Rule 50    exprs_add -> exprs_add , expr
Rule 51    exprs -> expr ;
Rule 52    exprs -> exprs expr ;
Rule 53    inicializaciones -> inicializacion
Rule 54    inicializaciones -> inicializacion , inicializaciones
Rule 55    inicializacion -> OBJECTID : TYPEID ASSIGN expr  [precedence=right, level=1]
Rule 56    inicializacion -> OBJECTID : TYPEID
Rule 57    ramaCase -> OBJECTID : TYPEID DARROW expr
Rule 58    ramaCases -> ramaCase ;
Rule 59    ramaCases -> ramaCases ramaCase ;

Unused terminals:

    CMT_CONST
    CMT_CONST1
    ERROR
    NUMBER

Terminals, with rules where they appear:

(                    : 10 11 13 20 42 43 44 45 46 47
)                    : 10 11 13 20 42 43 44 45 46 47
*                    : 27
+                    : 29
,                    : 15 50 54
-                    : 28
.                    : 44 45 46 47
/                    : 26
:                    : 8 9 10 11 12 55 56 57
;                    : 2 3 6 7 51 52 58 59
<                    : 24
=                    : 22
@                    : 44 45
ASSIGN               : 8 48 55
BOOL_CONST           : 16
CASE                 : 32
CLASS                : 4 5
CMT_CONST            : 
CMT_CONST1           : 
DARROW               : 57
ELSE                 : 41
ERROR                : 
ESAC                 : 32
FI                   : 41
IF                   : 41
IN                   : 33
INHERITS             : 5
INT_CONST            : 18
ISVOID               : 30
LE                   : 23
LET                  : 33
LOOP                 : 40
NEW                  : 31
NOT                  : 21
NUMBER               : 
OBJECTID             : 8 9 10 11 12 19 42 43 44 45 46 47 48 55 56 57
OF                   : 32
POOL                 : 40
STR_CONST            : 17
THEN                 : 41
TYPEID               : 4 5 5 8 9 10 11 12 31 44 45 55 56 57
WHILE                : 40
error                : 
{                    : 4 5 10 11
}                    : 4 5 10 11
~                    : 25

Nonterminals, with rules where they appear:

_1_exprs_item        : 37 38
_1_exprs_items       : 35 37
_1_exprs_repeat      : 34
clase                : 2 3
clases               : 1 3
expr                 : 8 10 11 20 21 22 22 23 23 24 24 25 26 26 27 27 28 28 29 29 30 32 33 40 40 41 41 41 44 45 46 47 48 49 50 51 52 55 57
exprs                : 39 52
exprs_add            : 42 44 46 50
feature              : 6 7
features             : 4 5 7
formal               : 14 15
formales             : 11 13 15
inicializacion       : 53 54
inicializaciones     : 33 54
programa             : 0
ramaCase             : 58 59
ramaCases            : 32 59


state 0

    (0) S' -> . programa
    (1) programa -> . clases
    (2) clases -> . clase ;
    (3) clases -> . clases clase ;
    (4) clase -> . CLASS TYPEID { features }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { features }
    CLASS           shift and go to state 4

    programa                       shift and go to state 1
    clases                         shift and go to state 2
    clase                          shift and go to state 3

state 1

    (0) S' -> programa .


state 2

    (1) programa -> clases .
    (3) clases -> clases . clase ;
    (4) clase -> . CLASS TYPEID { features }
    (5) clase -> . CLASS TYPEID INHERITS TYPEID { features }
    $end            reduce using rule 1 (programa -> clases .)
    CLASS           shift and go to state 4

    clase                          shift and go to state 5

state 3

    (2) clases -> clase . ;
    ;               shift and go to state 6


state 4

    (4) clase -> CLASS . TYPEID { features }
    (5) clase -> CLASS . TYPEID INHERITS TYPEID { features }
    TYPEID          shift and go to state 7


state 5

    (3) clases -> clases clase . ;
    ;               shift and go to state 8


state 6

    (2) clases -> clase ; .
    CLASS           reduce using rule 2 (clases -> clase ; .)
    $end            reduce using rule 2 (clases -> clase ; .)


state 7

    (4) clase -> CLASS TYPEID . { features }
    (5) clase -> CLASS TYPEID . INHERITS TYPEID { features }
    {               shift and go to state 9
    INHERITS        shift and go to state 10


state 8

    (3) clases -> clases clase ; .
    CLASS           reduce using rule 3 (clases -> clases clase ; .)
    $end            reduce using rule 3 (clases -> clases clase ; .)


state 9

    (4) clase -> CLASS TYPEID { . features }
    (6) features -> . feature ;
    (7) features -> . features feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    OBJECTID        shift and go to state 13

    features                       shift and go to state 11
    feature                        shift and go to state 12

state 10

    (5) clase -> CLASS TYPEID INHERITS . TYPEID { features }
    TYPEID          shift and go to state 14


state 11

    (4) clase -> CLASS TYPEID { features . }
    (7) features -> features . feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 15
    OBJECTID        shift and go to state 13

    feature                        shift and go to state 16

state 12

    (6) features -> feature . ;
    ;               shift and go to state 17


state 13

    (8) feature -> OBJECTID . : TYPEID ASSIGN expr
    (9) feature -> OBJECTID . : TYPEID
    (10) feature -> OBJECTID . ( ) : TYPEID { expr }
    (11) feature -> OBJECTID . ( formales ) : TYPEID { expr }
    :               shift and go to state 18
    (               shift and go to state 19


state 14

    (5) clase -> CLASS TYPEID INHERITS TYPEID . { features }
    {               shift and go to state 20


state 15

    (4) clase -> CLASS TYPEID { features } .
    ;               reduce using rule 4 (clase -> CLASS TYPEID { features } .)


state 16

    (7) features -> features feature . ;
    ;               shift and go to state 21


state 17

    (6) features -> feature ; .
    }               reduce using rule 6 (features -> feature ; .)
    OBJECTID        reduce using rule 6 (features -> feature ; .)


state 18

    (8) feature -> OBJECTID : . TYPEID ASSIGN expr
    (9) feature -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 22


state 19

    (10) feature -> OBJECTID ( . ) : TYPEID { expr }
    (11) feature -> OBJECTID ( . formales ) : TYPEID { expr }
    (14) formales -> . formal
    (15) formales -> . formales , formal
    (12) formal -> . OBJECTID : TYPEID
    (13) formal -> . ( formales )
    )               shift and go to state 25
    OBJECTID        shift and go to state 23
    (               shift and go to state 24

    formales                       shift and go to state 26
    formal                         shift and go to state 27

state 20

    (5) clase -> CLASS TYPEID INHERITS TYPEID { . features }
    (6) features -> . feature ;
    (7) features -> . features feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    OBJECTID        shift and go to state 13

    features                       shift and go to state 28
    feature                        shift and go to state 12

state 21

    (7) features -> features feature ; .
    }               reduce using rule 7 (features -> features feature ; .)
    OBJECTID        reduce using rule 7 (features -> features feature ; .)


state 22

    (8) feature -> OBJECTID : TYPEID . ASSIGN expr
    (9) feature -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 29
    ;               reduce using rule 9 (feature -> OBJECTID : TYPEID .)


state 23

    (12) formal -> OBJECTID . : TYPEID
    :               shift and go to state 30


state 24

    (13) formal -> ( . formales )
    (14) formales -> . formal
    (15) formales -> . formales , formal
    (12) formal -> . OBJECTID : TYPEID
    (13) formal -> . ( formales )
    OBJECTID        shift and go to state 23
    (               shift and go to state 24

    formales                       shift and go to state 31
    formal                         shift and go to state 27

state 25

    (10) feature -> OBJECTID ( ) . : TYPEID { expr }
    :               shift and go to state 32


state 26

    (11) feature -> OBJECTID ( formales . ) : TYPEID { expr }
    (15) formales -> formales . , formal
    )               shift and go to state 33
    ,               shift and go to state 34


state 27

    (14) formales -> formal .
    )               reduce using rule 14 (formales -> formal .)
    ,               reduce using rule 14 (formales -> formal .)


state 28

    (5) clase -> CLASS TYPEID INHERITS TYPEID { features . }
    (7) features -> features . feature ;
    (8) feature -> . OBJECTID : TYPEID ASSIGN expr
    (9) feature -> . OBJECTID : TYPEID
    (10) feature -> . OBJECTID ( ) : TYPEID { expr }
    (11) feature -> . OBJECTID ( formales ) : TYPEID { expr }
    }               shift and go to state 35
    OBJECTID        shift and go to state 13

    feature                        shift and go to state 16

state 29

    (8) feature -> OBJECTID : TYPEID ASSIGN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 37
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 30

    (12) formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 54


state 31

    (13) formal -> ( formales . )
    (15) formales -> formales . , formal
    )               shift and go to state 55
    ,               shift and go to state 34


state 32

    (10) feature -> OBJECTID ( ) : . TYPEID { expr }
    TYPEID          shift and go to state 56


state 33

    (11) feature -> OBJECTID ( formales ) . : TYPEID { expr }
    :               shift and go to state 57


state 34

    (15) formales -> formales , . formal
    (12) formal -> . OBJECTID : TYPEID
    (13) formal -> . ( formales )
    OBJECTID        shift and go to state 23
    (               shift and go to state 24

    formal                         shift and go to state 58

state 35

    (5) clase -> CLASS TYPEID INHERITS TYPEID { features } .
    ;               reduce using rule 5 (clase -> CLASS TYPEID INHERITS TYPEID { features } .)


state 36

    (19) expr -> OBJECTID .
    (42) expr -> OBJECTID . ( exprs_add )
    (43) expr -> OBJECTID . ( )
    (48) expr -> OBJECTID . ASSIGN expr
    =               reduce using rule 19 (expr -> OBJECTID .)
    LE              reduce using rule 19 (expr -> OBJECTID .)
    <               reduce using rule 19 (expr -> OBJECTID .)
    /               reduce using rule 19 (expr -> OBJECTID .)
    *               reduce using rule 19 (expr -> OBJECTID .)
    -               reduce using rule 19 (expr -> OBJECTID .)
    +               reduce using rule 19 (expr -> OBJECTID .)
    @               reduce using rule 19 (expr -> OBJECTID .)
    .               reduce using rule 19 (expr -> OBJECTID .)
    ;               reduce using rule 19 (expr -> OBJECTID .)
    )               reduce using rule 19 (expr -> OBJECTID .)
    OF              reduce using rule 19 (expr -> OBJECTID .)
    LOOP            reduce using rule 19 (expr -> OBJECTID .)
    THEN            reduce using rule 19 (expr -> OBJECTID .)
    ,               reduce using rule 19 (expr -> OBJECTID .)
    }               reduce using rule 19 (expr -> OBJECTID .)
    POOL            reduce using rule 19 (expr -> OBJECTID .)
    ELSE            reduce using rule 19 (expr -> OBJECTID .)
    IN              reduce using rule 19 (expr -> OBJECTID .)
    FI              reduce using rule 19 (expr -> OBJECTID .)
    (               shift and go to state 59
    ASSIGN          shift and go to state 60


state 37

    (8) feature -> OBJECTID : TYPEID ASSIGN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    ;               reduce using rule 8 (feature -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 38

    (16) expr -> BOOL_CONST .
    =               reduce using rule 16 (expr -> BOOL_CONST .)
    LE              reduce using rule 16 (expr -> BOOL_CONST .)
    <               reduce using rule 16 (expr -> BOOL_CONST .)
    /               reduce using rule 16 (expr -> BOOL_CONST .)
    *               reduce using rule 16 (expr -> BOOL_CONST .)
    -               reduce using rule 16 (expr -> BOOL_CONST .)
    +               reduce using rule 16 (expr -> BOOL_CONST .)
    @               reduce using rule 16 (expr -> BOOL_CONST .)
    .               reduce using rule 16 (expr -> BOOL_CONST .)
    ;               reduce using rule 16 (expr -> BOOL_CONST .)
    )               reduce using rule 16 (expr -> BOOL_CONST .)
    OF              reduce using rule 16 (expr -> BOOL_CONST .)
    LOOP            reduce using rule 16 (expr -> BOOL_CONST .)
    THEN            reduce using rule 16 (expr -> BOOL_CONST .)
    ,               reduce using rule 16 (expr -> BOOL_CONST .)
    }               reduce using rule 16 (expr -> BOOL_CONST .)
    POOL            reduce using rule 16 (expr -> BOOL_CONST .)
    ELSE            reduce using rule 16 (expr -> BOOL_CONST .)
    IN              reduce using rule 16 (expr -> BOOL_CONST .)
    FI              reduce using rule 16 (expr -> BOOL_CONST .)


state 39

    (17) expr -> STR_CONST .
    =               reduce using rule 17 (expr -> STR_CONST .)
    LE              reduce using rule 17 (expr -> STR_CONST .)
    <               reduce using rule 17 (expr -> STR_CONST .)
    /               reduce using rule 17 (expr -> STR_CONST .)
    *               reduce using rule 17 (expr -> STR_CONST .)
    -               reduce using rule 17 (expr -> STR_CONST .)
    +               reduce using rule 17 (expr -> STR_CONST .)
    @               reduce using rule 17 (expr -> STR_CONST .)
    .               reduce using rule 17 (expr -> STR_CONST .)
    ;               reduce using rule 17 (expr -> STR_CONST .)
    )               reduce using rule 17 (expr -> STR_CONST .)
    OF              reduce using rule 17 (expr -> STR_CONST .)
    LOOP            reduce using rule 17 (expr -> STR_CONST .)
    THEN            reduce using rule 17 (expr -> STR_CONST .)
    ,               reduce using rule 17 (expr -> STR_CONST .)
    }               reduce using rule 17 (expr -> STR_CONST .)
    POOL            reduce using rule 17 (expr -> STR_CONST .)
    ELSE            reduce using rule 17 (expr -> STR_CONST .)
    IN              reduce using rule 17 (expr -> STR_CONST .)
    FI              reduce using rule 17 (expr -> STR_CONST .)


state 40

    (18) expr -> INT_CONST .
    =               reduce using rule 18 (expr -> INT_CONST .)
    LE              reduce using rule 18 (expr -> INT_CONST .)
    <               reduce using rule 18 (expr -> INT_CONST .)
    /               reduce using rule 18 (expr -> INT_CONST .)
    *               reduce using rule 18 (expr -> INT_CONST .)
    -               reduce using rule 18 (expr -> INT_CONST .)
    +               reduce using rule 18 (expr -> INT_CONST .)
    @               reduce using rule 18 (expr -> INT_CONST .)
    .               reduce using rule 18 (expr -> INT_CONST .)
    ;               reduce using rule 18 (expr -> INT_CONST .)
    )               reduce using rule 18 (expr -> INT_CONST .)
    OF              reduce using rule 18 (expr -> INT_CONST .)
    LOOP            reduce using rule 18 (expr -> INT_CONST .)
    THEN            reduce using rule 18 (expr -> INT_CONST .)
    ,               reduce using rule 18 (expr -> INT_CONST .)
    }               reduce using rule 18 (expr -> INT_CONST .)
    POOL            reduce using rule 18 (expr -> INT_CONST .)
    ELSE            reduce using rule 18 (expr -> INT_CONST .)
    IN              reduce using rule 18 (expr -> INT_CONST .)
    FI              reduce using rule 18 (expr -> INT_CONST .)


state 41

    (20) expr -> ( . expr )
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 71
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 42

    (21) expr -> NOT . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 72
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 43

    (25) expr -> ~ . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 73
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 44

    (30) expr -> ISVOID . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 74
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 45

    (31) expr -> NEW . TYPEID
    TYPEID          shift and go to state 75


state 46

    (32) expr -> CASE . expr OF ramaCases ESAC
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 76
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 47

    (33) expr -> LET . inicializaciones IN expr
    (53) inicializaciones -> . inicializacion
    (54) inicializaciones -> . inicializacion , inicializaciones
    (55) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    (56) inicializacion -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 79

    inicializaciones               shift and go to state 77
    inicializacion                 shift and go to state 78

state 48

    (34) expr -> _1_exprs_repeat .
    =               reduce using rule 34 (expr -> _1_exprs_repeat .)
    LE              reduce using rule 34 (expr -> _1_exprs_repeat .)
    <               reduce using rule 34 (expr -> _1_exprs_repeat .)
    /               reduce using rule 34 (expr -> _1_exprs_repeat .)
    *               reduce using rule 34 (expr -> _1_exprs_repeat .)
    -               reduce using rule 34 (expr -> _1_exprs_repeat .)
    +               reduce using rule 34 (expr -> _1_exprs_repeat .)
    @               reduce using rule 34 (expr -> _1_exprs_repeat .)
    .               reduce using rule 34 (expr -> _1_exprs_repeat .)
    ;               reduce using rule 34 (expr -> _1_exprs_repeat .)
    )               reduce using rule 34 (expr -> _1_exprs_repeat .)
    OF              reduce using rule 34 (expr -> _1_exprs_repeat .)
    LOOP            reduce using rule 34 (expr -> _1_exprs_repeat .)
    THEN            reduce using rule 34 (expr -> _1_exprs_repeat .)
    ,               reduce using rule 34 (expr -> _1_exprs_repeat .)
    }               reduce using rule 34 (expr -> _1_exprs_repeat .)
    POOL            reduce using rule 34 (expr -> _1_exprs_repeat .)
    ELSE            reduce using rule 34 (expr -> _1_exprs_repeat .)
    IN              reduce using rule 34 (expr -> _1_exprs_repeat .)
    FI              reduce using rule 34 (expr -> _1_exprs_repeat .)


state 49

    (40) expr -> WHILE . expr LOOP expr POOL
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 80
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 50

    (41) expr -> IF . expr THEN expr ELSE expr FI
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 81
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 51

    (35) _1_exprs_repeat -> _1_exprs_items .
    (37) _1_exprs_items -> _1_exprs_items . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
  ! reduce/reduce conflict for ; resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for = resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for LE resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for < resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for / resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for * resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for - resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for + resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for @ resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
  ! reduce/reduce conflict for . resolved using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    =               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    LE              reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    <               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    /               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    *               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    -               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    +               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    @               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    .               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    ;               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    )               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    OF              reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    LOOP            reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    THEN            reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    ,               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    }               reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    POOL            reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    ELSE            reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    IN              reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    FI              reduce using rule 35 (_1_exprs_repeat -> _1_exprs_items .)
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50

    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 82
    exprs                          shift and go to state 53
    expr                           shift and go to state 83
    _1_exprs_repeat                shift and go to state 48

state 52

    (38) _1_exprs_items -> _1_exprs_item .
    BOOL_CONST      reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    STR_CONST       reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    INT_CONST       reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    OBJECTID        reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    (               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    NOT             reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    ~               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    ISVOID          reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    NEW             reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    CASE            reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    LET             reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    WHILE           reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    IF              reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    ;               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    =               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    LE              reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    <               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    /               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    *               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    -               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    +               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    @               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    .               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    )               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    OF              reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    LOOP            reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    THEN            reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    ,               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    }               reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    POOL            reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    ELSE            reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    IN              reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)
    FI              reduce using rule 38 (_1_exprs_items -> _1_exprs_item .)


state 53

    (39) _1_exprs_item -> exprs .
    (52) exprs -> exprs . expr ;
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
  ! shift/reduce conflict for BOOL_CONST resolved as shift
  ! shift/reduce conflict for STR_CONST resolved as shift
  ! shift/reduce conflict for INT_CONST resolved as shift
  ! shift/reduce conflict for OBJECTID resolved as shift
  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ~ resolved as shift
  ! shift/reduce conflict for ISVOID resolved as shift
  ! shift/reduce conflict for NEW resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! reduce/reduce conflict for ; resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for = resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for LE resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for < resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for / resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for * resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for - resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for + resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for @ resolved using rule 36 (_1_exprs_repeat -> .)
  ! reduce/reduce conflict for . resolved using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 39 (_1_exprs_item -> exprs .)
    OF              reduce using rule 39 (_1_exprs_item -> exprs .)
    LOOP            reduce using rule 39 (_1_exprs_item -> exprs .)
    THEN            reduce using rule 39 (_1_exprs_item -> exprs .)
    ,               reduce using rule 39 (_1_exprs_item -> exprs .)
    }               reduce using rule 39 (_1_exprs_item -> exprs .)
    POOL            reduce using rule 39 (_1_exprs_item -> exprs .)
    ELSE            reduce using rule 39 (_1_exprs_item -> exprs .)
    IN              reduce using rule 39 (_1_exprs_item -> exprs .)
    FI              reduce using rule 39 (_1_exprs_item -> exprs .)
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)

    exprs                          shift and go to state 53
    expr                           shift and go to state 84
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52

state 54

    (12) formal -> OBJECTID : TYPEID .
    )               reduce using rule 12 (formal -> OBJECTID : TYPEID .)
    ,               reduce using rule 12 (formal -> OBJECTID : TYPEID .)


state 55

    (13) formal -> ( formales ) .
    )               reduce using rule 13 (formal -> ( formales ) .)
    ,               reduce using rule 13 (formal -> ( formales ) .)


state 56

    (10) feature -> OBJECTID ( ) : TYPEID . { expr }
    {               shift and go to state 85


state 57

    (11) feature -> OBJECTID ( formales ) : . TYPEID { expr }
    TYPEID          shift and go to state 86


state 58

    (15) formales -> formales , formal .
    )               reduce using rule 15 (formales -> formales , formal .)
    ,               reduce using rule 15 (formales -> formales , formal .)


state 59

    (42) expr -> OBJECTID ( . exprs_add )
    (43) expr -> OBJECTID ( . )
    (49) exprs_add -> . expr
    (50) exprs_add -> . exprs_add , expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 88
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)

    exprs_add                      shift and go to state 87
    expr                           shift and go to state 89
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 60

    (48) expr -> OBJECTID ASSIGN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 90
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 61

    (22) expr -> expr = . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 91
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 62

    (23) expr -> expr LE . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 92
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 63

    (24) expr -> expr < . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 93
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 64

    (26) expr -> expr / . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 94
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 65

    (27) expr -> expr * . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 95
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 66

    (28) expr -> expr - . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 96
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 67

    (29) expr -> expr + . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 97
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 68

    (44) expr -> expr @ . TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 98


state 69

    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    OBJECTID        shift and go to state 99


state 70

    (51) exprs -> expr ; .
    BOOL_CONST      reduce using rule 51 (exprs -> expr ; .)
    STR_CONST       reduce using rule 51 (exprs -> expr ; .)
    INT_CONST       reduce using rule 51 (exprs -> expr ; .)
    OBJECTID        reduce using rule 51 (exprs -> expr ; .)
    (               reduce using rule 51 (exprs -> expr ; .)
    NOT             reduce using rule 51 (exprs -> expr ; .)
    ~               reduce using rule 51 (exprs -> expr ; .)
    ISVOID          reduce using rule 51 (exprs -> expr ; .)
    NEW             reduce using rule 51 (exprs -> expr ; .)
    CASE            reduce using rule 51 (exprs -> expr ; .)
    LET             reduce using rule 51 (exprs -> expr ; .)
    WHILE           reduce using rule 51 (exprs -> expr ; .)
    IF              reduce using rule 51 (exprs -> expr ; .)
    ;               reduce using rule 51 (exprs -> expr ; .)
    =               reduce using rule 51 (exprs -> expr ; .)
    LE              reduce using rule 51 (exprs -> expr ; .)
    <               reduce using rule 51 (exprs -> expr ; .)
    /               reduce using rule 51 (exprs -> expr ; .)
    *               reduce using rule 51 (exprs -> expr ; .)
    -               reduce using rule 51 (exprs -> expr ; .)
    +               reduce using rule 51 (exprs -> expr ; .)
    @               reduce using rule 51 (exprs -> expr ; .)
    .               reduce using rule 51 (exprs -> expr ; .)
    )               reduce using rule 51 (exprs -> expr ; .)
    OF              reduce using rule 51 (exprs -> expr ; .)
    LOOP            reduce using rule 51 (exprs -> expr ; .)
    THEN            reduce using rule 51 (exprs -> expr ; .)
    ,               reduce using rule 51 (exprs -> expr ; .)
    }               reduce using rule 51 (exprs -> expr ; .)
    POOL            reduce using rule 51 (exprs -> expr ; .)
    ELSE            reduce using rule 51 (exprs -> expr ; .)
    IN              reduce using rule 51 (exprs -> expr ; .)
    FI              reduce using rule 51 (exprs -> expr ; .)


state 71

    (20) expr -> ( expr . )
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    )               shift and go to state 100
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 72

    (21) expr -> NOT expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    =               reduce using rule 21 (expr -> NOT expr .)
    LE              reduce using rule 21 (expr -> NOT expr .)
    <               reduce using rule 21 (expr -> NOT expr .)
    @               reduce using rule 21 (expr -> NOT expr .)
    .               reduce using rule 21 (expr -> NOT expr .)
    ;               reduce using rule 21 (expr -> NOT expr .)
    )               reduce using rule 21 (expr -> NOT expr .)
    OF              reduce using rule 21 (expr -> NOT expr .)
    LOOP            reduce using rule 21 (expr -> NOT expr .)
    THEN            reduce using rule 21 (expr -> NOT expr .)
    ,               reduce using rule 21 (expr -> NOT expr .)
    }               reduce using rule 21 (expr -> NOT expr .)
    POOL            reduce using rule 21 (expr -> NOT expr .)
    ELSE            reduce using rule 21 (expr -> NOT expr .)
    IN              reduce using rule 21 (expr -> NOT expr .)
    FI              reduce using rule 21 (expr -> NOT expr .)
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67


state 73

    (25) expr -> ~ expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for ; resolved as shift
    )               reduce using rule 25 (expr -> ~ expr .)
    OF              reduce using rule 25 (expr -> ~ expr .)
    LOOP            reduce using rule 25 (expr -> ~ expr .)
    THEN            reduce using rule 25 (expr -> ~ expr .)
    ,               reduce using rule 25 (expr -> ~ expr .)
    }               reduce using rule 25 (expr -> ~ expr .)
    POOL            reduce using rule 25 (expr -> ~ expr .)
    ELSE            reduce using rule 25 (expr -> ~ expr .)
    IN              reduce using rule 25 (expr -> ~ expr .)
    FI              reduce using rule 25 (expr -> ~ expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 74

    (30) expr -> ISVOID expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    =               reduce using rule 30 (expr -> ISVOID expr .)
    LE              reduce using rule 30 (expr -> ISVOID expr .)
    <               reduce using rule 30 (expr -> ISVOID expr .)
    /               reduce using rule 30 (expr -> ISVOID expr .)
    *               reduce using rule 30 (expr -> ISVOID expr .)
    -               reduce using rule 30 (expr -> ISVOID expr .)
    +               reduce using rule 30 (expr -> ISVOID expr .)
    @               reduce using rule 30 (expr -> ISVOID expr .)
    .               reduce using rule 30 (expr -> ISVOID expr .)
    ;               reduce using rule 30 (expr -> ISVOID expr .)
    )               reduce using rule 30 (expr -> ISVOID expr .)
    OF              reduce using rule 30 (expr -> ISVOID expr .)
    LOOP            reduce using rule 30 (expr -> ISVOID expr .)
    THEN            reduce using rule 30 (expr -> ISVOID expr .)
    ,               reduce using rule 30 (expr -> ISVOID expr .)
    }               reduce using rule 30 (expr -> ISVOID expr .)
    POOL            reduce using rule 30 (expr -> ISVOID expr .)
    ELSE            reduce using rule 30 (expr -> ISVOID expr .)
    IN              reduce using rule 30 (expr -> ISVOID expr .)
    FI              reduce using rule 30 (expr -> ISVOID expr .)


state 75

    (31) expr -> NEW TYPEID .
    =               reduce using rule 31 (expr -> NEW TYPEID .)
    LE              reduce using rule 31 (expr -> NEW TYPEID .)
    <               reduce using rule 31 (expr -> NEW TYPEID .)
    /               reduce using rule 31 (expr -> NEW TYPEID .)
    *               reduce using rule 31 (expr -> NEW TYPEID .)
    -               reduce using rule 31 (expr -> NEW TYPEID .)
    +               reduce using rule 31 (expr -> NEW TYPEID .)
    @               reduce using rule 31 (expr -> NEW TYPEID .)
    .               reduce using rule 31 (expr -> NEW TYPEID .)
    ;               reduce using rule 31 (expr -> NEW TYPEID .)
    )               reduce using rule 31 (expr -> NEW TYPEID .)
    OF              reduce using rule 31 (expr -> NEW TYPEID .)
    LOOP            reduce using rule 31 (expr -> NEW TYPEID .)
    THEN            reduce using rule 31 (expr -> NEW TYPEID .)
    ,               reduce using rule 31 (expr -> NEW TYPEID .)
    }               reduce using rule 31 (expr -> NEW TYPEID .)
    POOL            reduce using rule 31 (expr -> NEW TYPEID .)
    ELSE            reduce using rule 31 (expr -> NEW TYPEID .)
    IN              reduce using rule 31 (expr -> NEW TYPEID .)
    FI              reduce using rule 31 (expr -> NEW TYPEID .)


state 76

    (32) expr -> CASE expr . OF ramaCases ESAC
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    OF              shift and go to state 101
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 77

    (33) expr -> LET inicializaciones . IN expr
    IN              shift and go to state 102


state 78

    (53) inicializaciones -> inicializacion .
    (54) inicializaciones -> inicializacion . , inicializaciones
    IN              reduce using rule 53 (inicializaciones -> inicializacion .)
    ,               shift and go to state 103


state 79

    (55) inicializacion -> OBJECTID . : TYPEID ASSIGN expr
    (56) inicializacion -> OBJECTID . : TYPEID
    :               shift and go to state 104


state 80

    (40) expr -> WHILE expr . LOOP expr POOL
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    LOOP            shift and go to state 105
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 81

    (41) expr -> IF expr . THEN expr ELSE expr FI
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    THEN            shift and go to state 106
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 82

    (37) _1_exprs_items -> _1_exprs_items _1_exprs_item .
    (38) _1_exprs_items -> _1_exprs_item .
  ! reduce/reduce conflict for BOOL_CONST resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for STR_CONST resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for INT_CONST resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for ( resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for NOT resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for ~ resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for ISVOID resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for NEW resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for CASE resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for LET resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for IF resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for ; resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for = resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for LE resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for < resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for / resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for * resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for - resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for + resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for @ resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
  ! reduce/reduce conflict for . resolved using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    BOOL_CONST      reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    STR_CONST       reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    INT_CONST       reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    OBJECTID        reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    (               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    NOT             reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    ~               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    ISVOID          reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    NEW             reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    CASE            reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    LET             reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    WHILE           reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    IF              reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    ;               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    =               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    LE              reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    <               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    /               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    *               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    -               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    +               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    @               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    .               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    )               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    OF              reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    LOOP            reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    THEN            reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    ,               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    }               reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    POOL            reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    ELSE            reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    IN              reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)
    FI              reduce using rule 37 (_1_exprs_items -> _1_exprs_items _1_exprs_item .)


state 83

    (51) exprs -> expr . ;
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    ;               shift and go to state 70
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 84

    (52) exprs -> exprs expr . ;
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    ;               shift and go to state 107
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69


state 85

    (10) feature -> OBJECTID ( ) : TYPEID { . expr }
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 108
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 86

    (11) feature -> OBJECTID ( formales ) : TYPEID . { expr }
    {               shift and go to state 109


state 87

    (42) expr -> OBJECTID ( exprs_add . )
    (50) exprs_add -> exprs_add . , expr
    )               shift and go to state 110
    ,               shift and go to state 111


state 88

    (43) expr -> OBJECTID ( ) .
    =               reduce using rule 43 (expr -> OBJECTID ( ) .)
    LE              reduce using rule 43 (expr -> OBJECTID ( ) .)
    <               reduce using rule 43 (expr -> OBJECTID ( ) .)
    /               reduce using rule 43 (expr -> OBJECTID ( ) .)
    *               reduce using rule 43 (expr -> OBJECTID ( ) .)
    -               reduce using rule 43 (expr -> OBJECTID ( ) .)
    +               reduce using rule 43 (expr -> OBJECTID ( ) .)
    @               reduce using rule 43 (expr -> OBJECTID ( ) .)
    .               reduce using rule 43 (expr -> OBJECTID ( ) .)
    ;               reduce using rule 43 (expr -> OBJECTID ( ) .)
    )               reduce using rule 43 (expr -> OBJECTID ( ) .)
    OF              reduce using rule 43 (expr -> OBJECTID ( ) .)
    LOOP            reduce using rule 43 (expr -> OBJECTID ( ) .)
    THEN            reduce using rule 43 (expr -> OBJECTID ( ) .)
    ,               reduce using rule 43 (expr -> OBJECTID ( ) .)
    }               reduce using rule 43 (expr -> OBJECTID ( ) .)
    POOL            reduce using rule 43 (expr -> OBJECTID ( ) .)
    ELSE            reduce using rule 43 (expr -> OBJECTID ( ) .)
    IN              reduce using rule 43 (expr -> OBJECTID ( ) .)
    FI              reduce using rule 43 (expr -> OBJECTID ( ) .)


state 89

    (49) exprs_add -> expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    )               reduce using rule 49 (exprs_add -> expr .)
    ,               reduce using rule 49 (exprs_add -> expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 90

    (48) expr -> OBJECTID ASSIGN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    =               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    LE              reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    <               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    @               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    .               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    ;               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    )               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    OF              reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    LOOP            reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    THEN            reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    ,               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    }               reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    POOL            reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    ELSE            reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    IN              reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    FI              reduce using rule 48 (expr -> OBJECTID ASSIGN expr .)
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67


state 91

    (22) expr -> expr = expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for ; resolved as shift
    )               reduce using rule 22 (expr -> expr = expr .)
    OF              reduce using rule 22 (expr -> expr = expr .)
    LOOP            reduce using rule 22 (expr -> expr = expr .)
    THEN            reduce using rule 22 (expr -> expr = expr .)
    ,               reduce using rule 22 (expr -> expr = expr .)
    }               reduce using rule 22 (expr -> expr = expr .)
    POOL            reduce using rule 22 (expr -> expr = expr .)
    ELSE            reduce using rule 22 (expr -> expr = expr .)
    IN              reduce using rule 22 (expr -> expr = expr .)
    FI              reduce using rule 22 (expr -> expr = expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 92

    (23) expr -> expr LE expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for ; resolved as shift
    )               reduce using rule 23 (expr -> expr LE expr .)
    OF              reduce using rule 23 (expr -> expr LE expr .)
    LOOP            reduce using rule 23 (expr -> expr LE expr .)
    THEN            reduce using rule 23 (expr -> expr LE expr .)
    ,               reduce using rule 23 (expr -> expr LE expr .)
    }               reduce using rule 23 (expr -> expr LE expr .)
    POOL            reduce using rule 23 (expr -> expr LE expr .)
    ELSE            reduce using rule 23 (expr -> expr LE expr .)
    IN              reduce using rule 23 (expr -> expr LE expr .)
    FI              reduce using rule 23 (expr -> expr LE expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 93

    (24) expr -> expr < expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for ; resolved as shift
    )               reduce using rule 24 (expr -> expr < expr .)
    OF              reduce using rule 24 (expr -> expr < expr .)
    LOOP            reduce using rule 24 (expr -> expr < expr .)
    THEN            reduce using rule 24 (expr -> expr < expr .)
    ,               reduce using rule 24 (expr -> expr < expr .)
    }               reduce using rule 24 (expr -> expr < expr .)
    POOL            reduce using rule 24 (expr -> expr < expr .)
    ELSE            reduce using rule 24 (expr -> expr < expr .)
    IN              reduce using rule 24 (expr -> expr < expr .)
    FI              reduce using rule 24 (expr -> expr < expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 94

    (26) expr -> expr / expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    =               reduce using rule 26 (expr -> expr / expr .)
    LE              reduce using rule 26 (expr -> expr / expr .)
    <               reduce using rule 26 (expr -> expr / expr .)
    /               reduce using rule 26 (expr -> expr / expr .)
    *               reduce using rule 26 (expr -> expr / expr .)
    -               reduce using rule 26 (expr -> expr / expr .)
    +               reduce using rule 26 (expr -> expr / expr .)
    @               reduce using rule 26 (expr -> expr / expr .)
    .               reduce using rule 26 (expr -> expr / expr .)
    ;               reduce using rule 26 (expr -> expr / expr .)
    )               reduce using rule 26 (expr -> expr / expr .)
    OF              reduce using rule 26 (expr -> expr / expr .)
    LOOP            reduce using rule 26 (expr -> expr / expr .)
    THEN            reduce using rule 26 (expr -> expr / expr .)
    ,               reduce using rule 26 (expr -> expr / expr .)
    }               reduce using rule 26 (expr -> expr / expr .)
    POOL            reduce using rule 26 (expr -> expr / expr .)
    ELSE            reduce using rule 26 (expr -> expr / expr .)
    IN              reduce using rule 26 (expr -> expr / expr .)
    FI              reduce using rule 26 (expr -> expr / expr .)


state 95

    (27) expr -> expr * expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    =               reduce using rule 27 (expr -> expr * expr .)
    LE              reduce using rule 27 (expr -> expr * expr .)
    <               reduce using rule 27 (expr -> expr * expr .)
    /               reduce using rule 27 (expr -> expr * expr .)
    *               reduce using rule 27 (expr -> expr * expr .)
    -               reduce using rule 27 (expr -> expr * expr .)
    +               reduce using rule 27 (expr -> expr * expr .)
    @               reduce using rule 27 (expr -> expr * expr .)
    .               reduce using rule 27 (expr -> expr * expr .)
    ;               reduce using rule 27 (expr -> expr * expr .)
    )               reduce using rule 27 (expr -> expr * expr .)
    OF              reduce using rule 27 (expr -> expr * expr .)
    LOOP            reduce using rule 27 (expr -> expr * expr .)
    THEN            reduce using rule 27 (expr -> expr * expr .)
    ,               reduce using rule 27 (expr -> expr * expr .)
    }               reduce using rule 27 (expr -> expr * expr .)
    POOL            reduce using rule 27 (expr -> expr * expr .)
    ELSE            reduce using rule 27 (expr -> expr * expr .)
    IN              reduce using rule 27 (expr -> expr * expr .)
    FI              reduce using rule 27 (expr -> expr * expr .)


state 96

    (28) expr -> expr - expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    =               reduce using rule 28 (expr -> expr - expr .)
    LE              reduce using rule 28 (expr -> expr - expr .)
    <               reduce using rule 28 (expr -> expr - expr .)
    -               reduce using rule 28 (expr -> expr - expr .)
    +               reduce using rule 28 (expr -> expr - expr .)
    @               reduce using rule 28 (expr -> expr - expr .)
    .               reduce using rule 28 (expr -> expr - expr .)
    ;               reduce using rule 28 (expr -> expr - expr .)
    )               reduce using rule 28 (expr -> expr - expr .)
    OF              reduce using rule 28 (expr -> expr - expr .)
    LOOP            reduce using rule 28 (expr -> expr - expr .)
    THEN            reduce using rule 28 (expr -> expr - expr .)
    ,               reduce using rule 28 (expr -> expr - expr .)
    }               reduce using rule 28 (expr -> expr - expr .)
    POOL            reduce using rule 28 (expr -> expr - expr .)
    ELSE            reduce using rule 28 (expr -> expr - expr .)
    IN              reduce using rule 28 (expr -> expr - expr .)
    FI              reduce using rule 28 (expr -> expr - expr .)
    /               shift and go to state 64
    *               shift and go to state 65


state 97

    (29) expr -> expr + expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    =               reduce using rule 29 (expr -> expr + expr .)
    LE              reduce using rule 29 (expr -> expr + expr .)
    <               reduce using rule 29 (expr -> expr + expr .)
    -               reduce using rule 29 (expr -> expr + expr .)
    +               reduce using rule 29 (expr -> expr + expr .)
    @               reduce using rule 29 (expr -> expr + expr .)
    .               reduce using rule 29 (expr -> expr + expr .)
    ;               reduce using rule 29 (expr -> expr + expr .)
    )               reduce using rule 29 (expr -> expr + expr .)
    OF              reduce using rule 29 (expr -> expr + expr .)
    LOOP            reduce using rule 29 (expr -> expr + expr .)
    THEN            reduce using rule 29 (expr -> expr + expr .)
    ,               reduce using rule 29 (expr -> expr + expr .)
    }               reduce using rule 29 (expr -> expr + expr .)
    POOL            reduce using rule 29 (expr -> expr + expr .)
    ELSE            reduce using rule 29 (expr -> expr + expr .)
    IN              reduce using rule 29 (expr -> expr + expr .)
    FI              reduce using rule 29 (expr -> expr + expr .)
    /               shift and go to state 64
    *               shift and go to state 65


state 98

    (44) expr -> expr @ TYPEID . . OBJECTID ( exprs_add )
    (45) expr -> expr @ TYPEID . . OBJECTID ( )
    .               shift and go to state 112


state 99

    (46) expr -> expr . OBJECTID . ( exprs_add )
    (47) expr -> expr . OBJECTID . ( )
    (               shift and go to state 113


state 100

    (20) expr -> ( expr ) .
    =               reduce using rule 20 (expr -> ( expr ) .)
    LE              reduce using rule 20 (expr -> ( expr ) .)
    <               reduce using rule 20 (expr -> ( expr ) .)
    /               reduce using rule 20 (expr -> ( expr ) .)
    *               reduce using rule 20 (expr -> ( expr ) .)
    -               reduce using rule 20 (expr -> ( expr ) .)
    +               reduce using rule 20 (expr -> ( expr ) .)
    @               reduce using rule 20 (expr -> ( expr ) .)
    .               reduce using rule 20 (expr -> ( expr ) .)
    ;               reduce using rule 20 (expr -> ( expr ) .)
    )               reduce using rule 20 (expr -> ( expr ) .)
    OF              reduce using rule 20 (expr -> ( expr ) .)
    LOOP            reduce using rule 20 (expr -> ( expr ) .)
    THEN            reduce using rule 20 (expr -> ( expr ) .)
    ,               reduce using rule 20 (expr -> ( expr ) .)
    }               reduce using rule 20 (expr -> ( expr ) .)
    POOL            reduce using rule 20 (expr -> ( expr ) .)
    ELSE            reduce using rule 20 (expr -> ( expr ) .)
    IN              reduce using rule 20 (expr -> ( expr ) .)
    FI              reduce using rule 20 (expr -> ( expr ) .)


state 101

    (32) expr -> CASE expr OF . ramaCases ESAC
    (58) ramaCases -> . ramaCase ;
    (59) ramaCases -> . ramaCases ramaCase ;
    (57) ramaCase -> . OBJECTID : TYPEID DARROW expr
    OBJECTID        shift and go to state 116

    ramaCases                      shift and go to state 114
    ramaCase                       shift and go to state 115

state 102

    (33) expr -> LET inicializaciones IN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    OF              reduce using rule 36 (_1_exprs_repeat -> .)
    LOOP            reduce using rule 36 (_1_exprs_repeat -> .)
    THEN            reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)
    FI              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 117
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 103

    (54) inicializaciones -> inicializacion , . inicializaciones
    (53) inicializaciones -> . inicializacion
    (54) inicializaciones -> . inicializacion , inicializaciones
    (55) inicializacion -> . OBJECTID : TYPEID ASSIGN expr
    (56) inicializacion -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 79

    inicializacion                 shift and go to state 78
    inicializaciones               shift and go to state 118

state 104

    (55) inicializacion -> OBJECTID : . TYPEID ASSIGN expr
    (56) inicializacion -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 119


state 105

    (40) expr -> WHILE expr LOOP . expr POOL
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    POOL            reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 120
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 106

    (41) expr -> IF expr THEN . expr ELSE expr FI
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ELSE            reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 121
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 107

    (52) exprs -> exprs expr ; .
    (51) exprs -> expr ; .
  ! reduce/reduce conflict for BOOL_CONST resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for STR_CONST resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for INT_CONST resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for OBJECTID resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for ( resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for NOT resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for ~ resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for ISVOID resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for NEW resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for CASE resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for LET resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for IF resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for ; resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for = resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for LE resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for < resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for / resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for * resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for - resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for + resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for @ resolved using rule 52 (exprs -> exprs expr ; .)
  ! reduce/reduce conflict for . resolved using rule 52 (exprs -> exprs expr ; .)
    BOOL_CONST      reduce using rule 52 (exprs -> exprs expr ; .)
    STR_CONST       reduce using rule 52 (exprs -> exprs expr ; .)
    INT_CONST       reduce using rule 52 (exprs -> exprs expr ; .)
    OBJECTID        reduce using rule 52 (exprs -> exprs expr ; .)
    (               reduce using rule 52 (exprs -> exprs expr ; .)
    NOT             reduce using rule 52 (exprs -> exprs expr ; .)
    ~               reduce using rule 52 (exprs -> exprs expr ; .)
    ISVOID          reduce using rule 52 (exprs -> exprs expr ; .)
    NEW             reduce using rule 52 (exprs -> exprs expr ; .)
    CASE            reduce using rule 52 (exprs -> exprs expr ; .)
    LET             reduce using rule 52 (exprs -> exprs expr ; .)
    WHILE           reduce using rule 52 (exprs -> exprs expr ; .)
    IF              reduce using rule 52 (exprs -> exprs expr ; .)
    ;               reduce using rule 52 (exprs -> exprs expr ; .)
    =               reduce using rule 52 (exprs -> exprs expr ; .)
    LE              reduce using rule 52 (exprs -> exprs expr ; .)
    <               reduce using rule 52 (exprs -> exprs expr ; .)
    /               reduce using rule 52 (exprs -> exprs expr ; .)
    *               reduce using rule 52 (exprs -> exprs expr ; .)
    -               reduce using rule 52 (exprs -> exprs expr ; .)
    +               reduce using rule 52 (exprs -> exprs expr ; .)
    @               reduce using rule 52 (exprs -> exprs expr ; .)
    .               reduce using rule 52 (exprs -> exprs expr ; .)
    )               reduce using rule 52 (exprs -> exprs expr ; .)
    OF              reduce using rule 52 (exprs -> exprs expr ; .)
    LOOP            reduce using rule 52 (exprs -> exprs expr ; .)
    THEN            reduce using rule 52 (exprs -> exprs expr ; .)
    ,               reduce using rule 52 (exprs -> exprs expr ; .)
    }               reduce using rule 52 (exprs -> exprs expr ; .)
    POOL            reduce using rule 52 (exprs -> exprs expr ; .)
    ELSE            reduce using rule 52 (exprs -> exprs expr ; .)
    IN              reduce using rule 52 (exprs -> exprs expr ; .)
    FI              reduce using rule 52 (exprs -> exprs expr ; .)


state 108

    (10) feature -> OBJECTID ( ) : TYPEID { expr . }
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    }               shift and go to state 122
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 109

    (11) feature -> OBJECTID ( formales ) : TYPEID { . expr }
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    }               reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 123
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 110

    (42) expr -> OBJECTID ( exprs_add ) .
    =               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    LE              reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    <               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    /               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    *               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    -               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    +               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    @               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    .               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    ;               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    )               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    OF              reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    ,               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    }               reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    IN              reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)
    FI              reduce using rule 42 (expr -> OBJECTID ( exprs_add ) .)


state 111

    (50) exprs_add -> exprs_add , . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    )               reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 124
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 112

    (44) expr -> expr @ TYPEID . . OBJECTID ( exprs_add )
    (45) expr -> expr @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 125


state 113

    (46) expr -> expr . OBJECTID ( . exprs_add )
    (47) expr -> expr . OBJECTID ( . )
    (49) exprs_add -> . expr
    (50) exprs_add -> . exprs_add , expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 127
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 89
    exprs_add                      shift and go to state 126
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 114

    (32) expr -> CASE expr OF ramaCases . ESAC
    (59) ramaCases -> ramaCases . ramaCase ;
    (57) ramaCase -> . OBJECTID : TYPEID DARROW expr
    ESAC            shift and go to state 128
    OBJECTID        shift and go to state 116

    ramaCase                       shift and go to state 129

state 115

    (58) ramaCases -> ramaCase . ;
    ;               shift and go to state 130


state 116

    (57) ramaCase -> OBJECTID . : TYPEID DARROW expr
    :               shift and go to state 131


state 117

    (33) expr -> LET inicializaciones IN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for ; resolved as shift
    )               reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    OF              reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    LOOP            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    THEN            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    ,               reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    }               reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    POOL            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    ELSE            reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    IN              reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    FI              reduce using rule 33 (expr -> LET inicializaciones IN expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 118

    (54) inicializaciones -> inicializacion , inicializaciones .
    IN              reduce using rule 54 (inicializaciones -> inicializacion , inicializaciones .)


state 119

    (55) inicializacion -> OBJECTID : TYPEID . ASSIGN expr
    (56) inicializacion -> OBJECTID : TYPEID .
    ASSIGN          shift and go to state 132
    ,               reduce using rule 56 (inicializacion -> OBJECTID : TYPEID .)
    IN              reduce using rule 56 (inicializacion -> OBJECTID : TYPEID .)


state 120

    (40) expr -> WHILE expr LOOP expr . POOL
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    POOL            shift and go to state 133
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 121

    (41) expr -> IF expr THEN expr . ELSE expr FI
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    ELSE            shift and go to state 134
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 122

    (10) feature -> OBJECTID ( ) : TYPEID { expr } .
    ;               reduce using rule 10 (feature -> OBJECTID ( ) : TYPEID { expr } .)


state 123

    (11) feature -> OBJECTID ( formales ) : TYPEID { expr . }
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    }               shift and go to state 135
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 124

    (50) exprs_add -> exprs_add , expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    )               reduce using rule 50 (exprs_add -> exprs_add , expr .)
    ,               reduce using rule 50 (exprs_add -> exprs_add , expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 125

    (44) expr -> expr @ TYPEID . OBJECTID . ( exprs_add )
    (45) expr -> expr @ TYPEID . OBJECTID . ( )
    (               shift and go to state 136


state 126

    (46) expr -> expr . OBJECTID ( exprs_add . )
    (50) exprs_add -> exprs_add . , expr
    )               shift and go to state 137
    ,               shift and go to state 111


state 127

    (47) expr -> expr . OBJECTID ( ) .
    =               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    LE              reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    <               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    /               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    *               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    -               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    +               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    @               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    .               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    ;               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    )               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    OF              reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    LOOP            reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    THEN            reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    ,               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    }               reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    POOL            reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    ELSE            reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    IN              reduce using rule 47 (expr -> expr . OBJECTID ( ) .)
    FI              reduce using rule 47 (expr -> expr . OBJECTID ( ) .)


state 128

    (32) expr -> CASE expr OF ramaCases ESAC .
    =               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    LE              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    <               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    /               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    *               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    -               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    +               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    @               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    .               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    ;               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    )               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    OF              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    LOOP            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    THEN            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    ,               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    }               reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    POOL            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    ELSE            reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    IN              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)
    FI              reduce using rule 32 (expr -> CASE expr OF ramaCases ESAC .)


state 129

    (59) ramaCases -> ramaCases ramaCase . ;
    ;               shift and go to state 138


state 130

    (58) ramaCases -> ramaCase ; .
    ESAC            reduce using rule 58 (ramaCases -> ramaCase ; .)
    OBJECTID        reduce using rule 58 (ramaCases -> ramaCase ; .)


state 131

    (57) ramaCase -> OBJECTID : . TYPEID DARROW expr
    TYPEID          shift and go to state 139


state 132

    (55) inicializacion -> OBJECTID : TYPEID ASSIGN . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)
    IN              reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 140
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 133

    (40) expr -> WHILE expr LOOP expr POOL .
    =               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    LE              reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    <               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    /               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    *               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    -               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    +               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    @               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    .               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    ;               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    )               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    OF              reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    LOOP            reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    THEN            reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    ,               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    }               reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    POOL            reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    ELSE            reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    IN              reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)
    FI              reduce using rule 40 (expr -> WHILE expr LOOP expr POOL .)


state 134

    (41) expr -> IF expr THEN expr ELSE . expr FI
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    FI              reduce using rule 36 (_1_exprs_repeat -> .)
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 141
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 135

    (11) feature -> OBJECTID ( formales ) : TYPEID { expr } .
    ;               reduce using rule 11 (feature -> OBJECTID ( formales ) : TYPEID { expr } .)


state 136

    (44) expr -> expr @ TYPEID . OBJECTID ( . exprs_add )
    (45) expr -> expr @ TYPEID . OBJECTID ( . )
    (49) exprs_add -> . expr
    (50) exprs_add -> . exprs_add , expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 143
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)
    ,               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 89
    exprs_add                      shift and go to state 142
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 137

    (46) expr -> expr . OBJECTID ( exprs_add ) .
    =               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    LE              reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    <               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    /               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    *               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    -               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    +               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    @               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    .               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    ;               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    )               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    OF              reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    ,               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    }               reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    IN              reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)
    FI              reduce using rule 46 (expr -> expr . OBJECTID ( exprs_add ) .)


state 138

    (59) ramaCases -> ramaCases ramaCase ; .
    ESAC            reduce using rule 59 (ramaCases -> ramaCases ramaCase ; .)
    OBJECTID        reduce using rule 59 (ramaCases -> ramaCases ramaCase ; .)


state 139

    (57) ramaCase -> OBJECTID : TYPEID . DARROW expr
    DARROW          shift and go to state 144


state 140

    (55) inicializacion -> OBJECTID : TYPEID ASSIGN expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    ,               reduce using rule 55 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    IN              reduce using rule 55 (inicializacion -> OBJECTID : TYPEID ASSIGN expr .)
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 141

    (41) expr -> IF expr THEN expr ELSE expr . FI
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
    FI              shift and go to state 145
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


state 142

    (44) expr -> expr @ TYPEID . OBJECTID ( exprs_add . )
    (50) exprs_add -> exprs_add . , expr
    )               shift and go to state 146
    ,               shift and go to state 111


state 143

    (45) expr -> expr @ TYPEID . OBJECTID ( ) .
    =               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LE              reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    .               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    IN              reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 45 (expr -> expr @ TYPEID . OBJECTID ( ) .)


state 144

    (57) ramaCase -> OBJECTID : TYPEID DARROW . expr
    (16) expr -> . BOOL_CONST
    (17) expr -> . STR_CONST
    (18) expr -> . INT_CONST
    (19) expr -> . OBJECTID
    (20) expr -> . ( expr )
    (21) expr -> . NOT expr
    (22) expr -> . expr = expr
    (23) expr -> . expr LE expr
    (24) expr -> . expr < expr
    (25) expr -> . ~ expr
    (26) expr -> . expr / expr
    (27) expr -> . expr * expr
    (28) expr -> . expr - expr
    (29) expr -> . expr + expr
    (30) expr -> . ISVOID expr
    (31) expr -> . NEW TYPEID
    (32) expr -> . CASE expr OF ramaCases ESAC
    (33) expr -> . LET inicializaciones IN expr
    (34) expr -> . _1_exprs_repeat
    (40) expr -> . WHILE expr LOOP expr POOL
    (41) expr -> . IF expr THEN expr ELSE expr FI
    (42) expr -> . OBJECTID ( exprs_add )
    (43) expr -> . OBJECTID ( )
    (44) expr -> . expr @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> . expr @ TYPEID . OBJECTID ( )
    (46) expr -> . expr . OBJECTID ( exprs_add )
    (47) expr -> . expr . OBJECTID ( )
    (48) expr -> . OBJECTID ASSIGN expr
    (35) _1_exprs_repeat -> . _1_exprs_items
    (36) _1_exprs_repeat -> .
    (37) _1_exprs_items -> . _1_exprs_items _1_exprs_item
    (38) _1_exprs_items -> . _1_exprs_item
    (39) _1_exprs_item -> . exprs
    (51) exprs -> . expr ;
    (52) exprs -> . exprs expr ;
    BOOL_CONST      shift and go to state 38
    STR_CONST       shift and go to state 39
    INT_CONST       shift and go to state 40
    OBJECTID        shift and go to state 36
    (               shift and go to state 41
    NOT             shift and go to state 42
    ~               shift and go to state 43
    ISVOID          shift and go to state 44
    NEW             shift and go to state 45
    CASE            shift and go to state 46
    LET             shift and go to state 47
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    =               reduce using rule 36 (_1_exprs_repeat -> .)
    LE              reduce using rule 36 (_1_exprs_repeat -> .)
    <               reduce using rule 36 (_1_exprs_repeat -> .)
    /               reduce using rule 36 (_1_exprs_repeat -> .)
    *               reduce using rule 36 (_1_exprs_repeat -> .)
    -               reduce using rule 36 (_1_exprs_repeat -> .)
    +               reduce using rule 36 (_1_exprs_repeat -> .)
    @               reduce using rule 36 (_1_exprs_repeat -> .)
    .               reduce using rule 36 (_1_exprs_repeat -> .)
    ;               reduce using rule 36 (_1_exprs_repeat -> .)

    expr                           shift and go to state 147
    _1_exprs_repeat                shift and go to state 48
    _1_exprs_items                 shift and go to state 51
    _1_exprs_item                  shift and go to state 52
    exprs                          shift and go to state 53

state 145

    (41) expr -> IF expr THEN expr ELSE expr FI .
    =               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    LE              reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    <               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    /               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    *               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    -               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    +               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    @               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    .               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    ;               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    )               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    OF              reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    LOOP            reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    THEN            reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    ,               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    }               reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    POOL            reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    ELSE            reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    IN              reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)
    FI              reduce using rule 41 (expr -> IF expr THEN expr ELSE expr FI .)


state 146

    (44) expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .
    =               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    LE              reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    <               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    /               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    *               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    -               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    +               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    @               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    .               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ;               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    )               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    OF              reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    LOOP            reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    THEN            reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ,               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    }               reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    POOL            reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    ELSE            reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    IN              reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)
    FI              reduce using rule 44 (expr -> expr @ TYPEID . OBJECTID ( exprs_add ) .)


state 147

    (57) ramaCase -> OBJECTID : TYPEID DARROW expr .
    (22) expr -> expr . = expr
    (23) expr -> expr . LE expr
    (24) expr -> expr . < expr
    (26) expr -> expr . / expr
    (27) expr -> expr . * expr
    (28) expr -> expr . - expr
    (29) expr -> expr . + expr
    (44) expr -> expr . @ TYPEID . OBJECTID ( exprs_add )
    (45) expr -> expr . @ TYPEID . OBJECTID ( )
    (46) expr -> expr . . OBJECTID ( exprs_add )
    (47) expr -> expr . . OBJECTID ( )
    (51) exprs -> expr . ;
  ! shift/reduce conflict for ; resolved as shift
    =               shift and go to state 61
    LE              shift and go to state 62
    <               shift and go to state 63
    /               shift and go to state 64
    *               shift and go to state 65
    -               shift and go to state 66
    +               shift and go to state 67
    @               shift and go to state 68
    .               shift and go to state 69
    ;               shift and go to state 70


Conflicts:

shift/reduce conflict for BOOL_CONST in state 53 resolved as shift
shift/reduce conflict for STR_CONST in state 53 resolved as shift
shift/reduce conflict for INT_CONST in state 53 resolved as shift
shift/reduce conflict for OBJECTID in state 53 resolved as shift
shift/reduce conflict for ( in state 53 resolved as shift
shift/reduce conflict for NOT in state 53 resolved as shift
shift/reduce conflict for ~ in state 53 resolved as shift
shift/reduce conflict for ISVOID in state 53 resolved as shift
shift/reduce conflict for NEW in state 53 resolved as shift
shift/reduce conflict for CASE in state 53 resolved as shift
shift/reduce conflict for LET in state 53 resolved as shift
shift/reduce conflict for WHILE in state 53 resolved as shift
shift/reduce conflict for IF in state 53 resolved as shift
shift/reduce conflict for ) in state 59 resolved as shift
shift/reduce conflict for = in state 73 resolved as shift
shift/reduce conflict for LE in state 73 resolved as shift
shift/reduce conflict for < in state 73 resolved as shift
shift/reduce conflict for / in state 73 resolved as shift
shift/reduce conflict for * in state 73 resolved as shift
shift/reduce conflict for - in state 73 resolved as shift
shift/reduce conflict for + in state 73 resolved as shift
shift/reduce conflict for @ in state 73 resolved as shift
shift/reduce conflict for . in state 73 resolved as shift
shift/reduce conflict for ; in state 73 resolved as shift
shift/reduce conflict for = in state 91 resolved as shift
shift/reduce conflict for LE in state 91 resolved as shift
shift/reduce conflict for < in state 91 resolved as shift
shift/reduce conflict for / in state 91 resolved as shift
shift/reduce conflict for * in state 91 resolved as shift
shift/reduce conflict for - in state 91 resolved as shift
shift/reduce conflict for + in state 91 resolved as shift
shift/reduce conflict for @ in state 91 resolved as shift
shift/reduce conflict for . in state 91 resolved as shift
shift/reduce conflict for ; in state 91 resolved as shift
shift/reduce conflict for = in state 92 resolved as shift
shift/reduce conflict for LE in state 92 resolved as shift
shift/reduce conflict for < in state 92 resolved as shift
shift/reduce conflict for / in state 92 resolved as shift
shift/reduce conflict for * in state 92 resolved as shift
shift/reduce conflict for - in state 92 resolved as shift
shift/reduce conflict for + in state 92 resolved as shift
shift/reduce conflict for @ in state 92 resolved as shift
shift/reduce conflict for . in state 92 resolved as shift
shift/reduce conflict for ; in state 92 resolved as shift
shift/reduce conflict for = in state 93 resolved as shift
shift/reduce conflict for LE in state 93 resolved as shift
shift/reduce conflict for < in state 93 resolved as shift
shift/reduce conflict for / in state 93 resolved as shift
shift/reduce conflict for * in state 93 resolved as shift
shift/reduce conflict for - in state 93 resolved as shift
shift/reduce conflict for + in state 93 resolved as shift
shift/reduce conflict for @ in state 93 resolved as shift
shift/reduce conflict for . in state 93 resolved as shift
shift/reduce conflict for ; in state 93 resolved as shift
shift/reduce conflict for ) in state 113 resolved as shift
shift/reduce conflict for = in state 117 resolved as shift
shift/reduce conflict for LE in state 117 resolved as shift
shift/reduce conflict for < in state 117 resolved as shift
shift/reduce conflict for / in state 117 resolved as shift
shift/reduce conflict for * in state 117 resolved as shift
shift/reduce conflict for - in state 117 resolved as shift
shift/reduce conflict for + in state 117 resolved as shift
shift/reduce conflict for @ in state 117 resolved as shift
shift/reduce conflict for . in state 117 resolved as shift
shift/reduce conflict for ; in state 117 resolved as shift
shift/reduce conflict for ) in state 136 resolved as shift
shift/reduce conflict for ; in state 147 resolved as shift
reduce/reduce conflict in state 51 resolved using rule _1_exprs_repeat -> _1_exprs_items
rejected rule (_1_exprs_repeat -> <empty>) in state 51
reduce/reduce conflict in state 53 resolved using rule _1_exprs_repeat -> <empty>
rejected rule (_1_exprs_item -> exprs) in state 53
reduce/reduce conflict in state 82 resolved using rule _1_exprs_items -> _1_exprs_items _1_exprs_item
rejected rule (_1_exprs_items -> _1_exprs_item) in state 82
reduce/reduce conflict in state 107 resolved using rule exprs -> exprs expr ;
rejected rule (exprs -> expr ;) in state 107